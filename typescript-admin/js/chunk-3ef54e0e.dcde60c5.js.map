{"version":3,"sources":["webpack:///./src/views/chart/map-chart.vue?7ab9","webpack:///./src/data/changsha.ts","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./src/views/chart/map-chart.vue?4ed7","webpack:///./src/views/chart/map-chart.vue?f61a","webpack:///./src/views/chart/map-chart.vue","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/index.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","attrs","staticRenderFns","changsha","type","features","properties","adcode","name","center","centroid","childrenNum","level","subFeatureIndex","acroutes","parent","geometry","coordinates","number1","e","number2","map","t","Math","cos","sin","PI","max","Array","prototype","slice","epsilon","tauEpsilon","Path","_x0","_y0","_x1","_y1","_","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","dy","cw","da","rect","w","h","toString","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","i","JSON","stringify","join","customConverter","f","object","row","inferColumns","rows","columnSet","Object","create","forEach","column","push","pad","value","width","s","length","formatYear","year","formatDate","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","reFormat","RegExp","delimiter","DELIMITER","charCodeAt","parse","text","convert","parseRows","N","I","n","eof","eol","token","c","j","replace","preformatBody","formatValue","format","concat","formatBody","formatRows","formatRow","Date","test","csv","dsv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","fetch","input","init","then","dsvParse","arguments","undefined","parser","DOMParser","parseFromString","_x","call","d","_y","cover","tree","xm","ym","xp","yp","right","bottom","node","_root","leaf","data","next","addAll","xz","yz","Infinity","floor","z","visit","q","x3","y3","quads","radius","pop","d2","retainer","previous","removeAll","remove","size","child","callback","quadtree","nodes","Quadtree","NaN","leaf_copy","copy","treeProto","source","target","add","extent","find","root","visitAfter","streamGeometry","stream","streamGeometryType","hasOwnProperty","streamObjectType","Feature","FeatureCollection","Sphere","sphere","Point","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","Adder","reset","temp","valueOf","adder","a","b","bv","av","quarterPi","degrees","radians","atan","atan2","exp","ceil","log","pow","sign","asin","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","result","area","areaPointFirst","areaPoint","boundsStream","boundsPoint","bounds","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","_circle","projectionStream","contextStream","path","apply","measure","projection","identity","compose","invert","rotationIdentity","lambda","phi","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","cosPhi","k","forward","rotate","line","lines","rejoin","shift","Intersection","points","other","entry","o","v","p","subject","clip","segments","segment","p0","p1","pointEqual","sort","compareIntersection","startInside","start","current","isSubject","interpolate","array","cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sum","longitude","sinPhi","normal","angle","winding","polygon","m","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","intersection","phiArc","sink","clipLine","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","pointVisible","pointLine","clean","ringSegments","filter","validSegment","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","from","to","direction","circleStream","t0","t1","cosRadius","sinRadius","step","circleRadius","cr","smallRadius","notHemisphere","visible","c0","v0","v00","point2","code","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","u","uu","t2","polar","meridian","q1","ax","ay","bx","by","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","polygonInside","b0","b1","cleanInside","linePoint","min","transformer","methods","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","fitExtent","fitSize","fitWidth","fitHeight","height","maxDepth","cosMinDistance","delta2","project","resampleNone","resampleLineTo","depth","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","transformRadians","transformRotate","scaleTranslate","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","resample","clipAngle","precision","mercatorRaw","mercatorProjection","reclip","random","randomUniform","sourceRandomUniform","randomNormal","mu","sigma","sourceRandomNormal","randomLogNormal","sourceRandomLogNormal","randomIrwinHall","sourceRandomIrwinHall","randomBates","irwinHall","sourceRandomBates","randomExponential","sourceRandomExponential","specifier","colors","RedBlackTree","RedBlackNode","U","C","L","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","insert","after","grandpa","uncle","sibling","red","left","createEdge","v1","edge","index","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","end","endX","endY","nCells","splice","dc","v01","v11","v10","firstCircle","circlePool","Circle","cy","attachCircle","lArc","rArc","lSite","cSite","rSite","cx","ha","hc","circle","before","circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","edges","polygons","triangles","s0","e1","s1","links","i0","that","i1","_found","vx","vy","v2","SQRT2","Transform","applyX","applyY","location","invertX","invertY","rescaleX","domain","range","rescaleY","__zoom","parentNode","$refs","mapChart","offsetWidth","svg","append","attr","ss2","sp2","selectAll","on","component","sourceEvent","identifier","touches","changedTouches","touch","$","IndexedObject","toIndexedObject","sloppyArrayMethod","nativeJoin","ES3_STRINGS","SLOPPY_METHOD","proto","forced","separator","event","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","top","clientTop"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,IAAI,YAAY,CAACF,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,YAC7IC,EAAkB,G,gGCDhBC,EAAW,CACfC,KAAM,oBACNC,SACE,CACE,CACED,KAAM,UACNE,WAAY,CACVC,OAAQ,OACRC,KAAM,MACNC,OAAQ,CAAC,WAAY,WACrBC,SAAU,CAAC,WAAY,WACvBC,YAAa,EACbC,MAAO,WACPC,gBAAiB,EACjBC,SAAU,CAAC,IAAQ,KAAQ,QAC3BC,OAAQ,CAACR,OAAQ,SAEnBS,SAAU,CACRZ,KAAM,eAENa,YAAagBAGxxG,CACEb,KAAM,UACNE,WAAY,CACVC,OAAQ,OACRC,KAAM,MACNC,OAAQ,CAAC,UAAW,WACpBC,SAAU,CAAC,WAAY,WACvBC,YAAa,EACbC,MAAO,WACPC,gBAAiB,EACjBC,SAAU,CAAC,IAAQ,KAAQ,QAC3BC,OAAQ,CAACR,OAAQ,SAEnBS,SAAU,CACRZ,KAAM,eAENa,YAAagBAG1+I,CACEb,KAAM,UACNE,WAAY,CACVC,OAAQ,OACRC,KAAM,MACNC,OAAQ,CAAC,WAAY,WACrBC,SAAU,CAAC,WAAY,WACvBC,YAAa,EACbC,MAAO,WACPC,gBAAiB,EACjBC,SAAU,CAAC,IAAQ,KAAQ,QAC3BC,OAAQ,CAACR,OAAQ,SAEnBS,SAAU,CACRZ,KAAM,eAENa,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,aAAc,CAAC,CAAC,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,QAAS,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,gBAGnjpB,CACEb,KAAM,UACNE,WAAY,CACVC,OAAQ,OACRC,KAAM,MACNC,OAAQ,CAAC,WAAY,WACrBC,SAAU,CAAC,WAAY,WACvBC,YAAa,EACbC,MAAO,WACPC,gBAAiB,EACjBC,SAAU,CAAC,IAAQ,KAAQ,QAC3BC,OAAQ,CAACR,OAAQ,SAEnBS,SAAU,CACRZ,KAAM,eAENa,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,QAAS,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,gBAGpjM,CACEb,KAAM,UACNE,WAAY,CACVC,OAAQ,OACRC,KAAM,MACNC,OAAQ,CAAC,WAAY,WACrBC,SAAU,CAAC,WAAY,WACvBC,YAAa,EACbC,MAAO,WACPC,gBAAiB,EACjBC,SAAU,CAAC,IAAQ,KAAQ,QAC3BC,OAAQ,CAACR,OAAQ,SAEnBS,SAAU,CACRZ,KAAM,eAENa,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,SAAU,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,UAAW,CAAC,SAAU,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,WAAY,CAAC,WAAY,UAAW,CAAC,WAAY,WAAY,CAAC,UAAW,WAAY,CAAC,UAAW,WAAY,CAAC,WAAY,W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","file":"js/chunk-3ef54e0e.dcde60c5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"mapChart\"},[_c('div',{attrs:{\"id\":\"svg\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const changsha = {\r\n  type: 'FeatureCollection',\r\n  features:\r\n    [\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430102,\r\n          name: '芙蓉区',\r\n          center: [112.988094, 28.193106],\r\n          centroid: [113.049039, 28.197737],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 0,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[112.986773, 28.185799], [112.983107, 28.187012], [112.981546, 28.185783], [112.978756, 28.185816], [112.976272, 28.186524], [112.976343, 28.193378], [112.97762, 28.193915], [112.977644, 28.195193], [112.976343, 28.195307], [112.97606, 28.19985], [112.976816, 28.200387], [112.979229, 28.200053], [112.984337, 28.19845], [112.987317, 28.198059], [112.991716, 28.197863], [112.991834, 28.200834], [112.992662, 28.203171], [112.994578, 28.204815], [112.994436, 28.20615], [112.997842, 28.206443], [113.000656, 28.204929], [113.004653, 28.205238], [113.006852, 28.206011], [113.006474, 28.207257], [113.004771, 28.207883], [113.003896, 28.210683], [113.00224, 28.211407], [113.001223, 28.212815], [113.001413, 28.213524], [113.003234, 28.21507], [113.005835, 28.218236], [113.008224, 28.218879], [113.010565, 28.216771], [113.011937, 28.216551], [113.013593, 28.216909], [113.019458, 28.218683], [113.024046, 28.219269], [113.027925, 28.21861], [113.032868, 28.217194], [113.037787, 28.215102], [113.039773, 28.215933], [113.038544, 28.2173], [113.038969, 28.217634], [113.040578, 28.21616], [113.045473, 28.217406], [113.050511, 28.219212], [113.052923, 28.21931], [113.052781, 28.220034], [113.057086, 28.223094], [113.05841, 28.219294], [113.060089, 28.217113], [113.062856, 28.217341], [113.06515, 28.218464], [113.065008, 28.21721], [113.069147, 28.217853], [113.072624, 28.217577], [113.072671, 28.215477], [113.081232, 28.21529], [113.081327, 28.213076], [113.08381, 28.212645], [113.084851, 28.213003], [113.084614, 28.210081], [113.08575, 28.210056], [113.087665, 28.211228], [113.087902, 28.212246], [113.086767, 28.215216], [113.088115, 28.215216], [113.088801, 28.214199], [113.089841, 28.214907], [113.091166, 28.214573], [113.091473, 28.213011], [113.092632, 28.212978], [113.092608, 28.211513], [113.094808, 28.211196], [113.094855, 28.210333], [113.09696, 28.210008], [113.097953, 28.207688], [113.098639, 28.207379], [113.101359, 28.207509], [113.102329, 28.206052], [113.103487, 28.205246], [113.103227, 28.206646], [113.104528, 28.208005], [113.10545, 28.207932], [113.105379, 28.205401], [113.106704, 28.205441], [113.105876, 28.204619], [113.106325, 28.199776], [113.108147, 28.19985], [113.107934, 28.202804], [113.109707, 28.202755], [113.110985, 28.201079], [113.109778, 28.197318], [113.108076, 28.197261], [113.10668, 28.196651], [113.107295, 28.194054], [113.106869, 28.192857], [113.107603, 28.189479], [113.108761, 28.189438], [113.10914, 28.187851], [113.108785, 28.18571], [113.108998, 28.184464], [113.107839, 28.18374], [113.107177, 28.18238], [113.104788, 28.182274], [113.101004, 28.180841], [113.095375, 28.1773], [113.091733, 28.175427], [113.086956, 28.173775], [113.083148, 28.172993], [113.080286, 28.173156], [113.073357, 28.174556], [113.068509, 28.177113], [113.065032, 28.180125], [113.056754, 28.185742], [113.050132, 28.190122], [113.044267, 28.184725], [113.043628, 28.18282], [113.043865, 28.181395], [113.045166, 28.178513], [113.044906, 28.177235], [113.043865, 28.176111], [113.042351, 28.175484], [113.040861, 28.175541], [113.038567, 28.176258], [113.03703, 28.179506], [113.036108, 28.180377], [113.034358, 28.180443], [113.034358, 28.182274], [113.030242, 28.182079], [113.030337, 28.184187], [113.011299, 28.185042], [113.004605, 28.185221], [112.994176, 28.18593], [112.986773, 28.185799]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430103,\r\n          name: '天心区',\r\n          center: [112.97307, 28.192375],\r\n          centroid: [112.981895, 28.064516],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 1,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[113.041287, 28.005898], [113.039797, 28.004895], [113.03755, 28.001177], [113.035635, 27.999497], [113.033341, 27.996756], [113.030881, 27.994734], [113.030053, 27.991937], [113.031661, 27.987133], [113.033388, 27.983895], [113.035351, 27.98113], [113.035918, 27.979539], [113.035918, 27.977419], [113.035351, 27.97613], [113.034097, 27.975135], [113.030715, 27.974939], [113.02932, 27.975673], [113.027783, 27.978479], [113.028374, 27.980828], [113.030266, 27.982198], [113.030432, 27.983063], [113.02835, 27.98458], [113.026127, 27.985665], [113.024283, 27.985689], [113.021823, 27.984515], [113.021515, 27.982981], [113.024448, 27.979384], [113.024424, 27.978283], [113.022391, 27.974221], [113.019363, 27.972663], [113.012363, 27.972606], [113.011251, 27.971848], [113.008413, 27.968413], [113.006143, 27.966651], [113.003186, 27.965159], [112.996943, 27.972019], [112.992071, 27.975853], [112.97289, 27.987467], [112.96492, 27.99409], [112.963856, 27.995264], [112.962697, 27.996561], [112.96064, 28.009421], [112.945007, 28.033294], [112.933938, 28.047715], [112.930887, 28.053054], [112.929161, 28.061848], [112.927955, 28.073502], [112.929256, 28.084349], [112.932496, 28.090444], [112.938905, 28.096489], [112.948862, 28.106747], [112.953734, 28.114209], [112.956761, 28.125744], [112.957021, 28.130476], [112.95572, 28.137668], [112.957068, 28.147604], [112.960545, 28.155674], [112.967285, 28.19473], [112.96738, 28.195625], [112.976343, 28.195307], [112.977644, 28.195193], [112.97762, 28.193915], [112.976343, 28.193378], [112.976272, 28.186524], [112.978756, 28.185816], [112.981546, 28.185783], [112.983107, 28.187012], [112.986773, 28.185799], [112.986584, 28.18032], [112.986324, 28.178228], [112.985472, 28.174629], [112.985189, 28.170656], [112.985165, 28.166968], [112.986253, 28.163361], [112.985496, 28.160063], [112.984077, 28.157254], [112.983982, 28.156285], [112.985283, 28.150918], [112.98526, 28.148524], [112.986229, 28.14433], [112.991054, 28.14661], [112.993916, 28.147213], [112.99472, 28.143825], [112.996612, 28.141178], [112.999639, 28.138344], [113.00068, 28.136805], [113.002335, 28.132716], [113.004818, 28.12914], [113.005268, 28.12589], [113.006781, 28.1233], [113.003849, 28.122151], [113.001247, 28.123047], [113.000656, 28.121883], [113.005552, 28.120661], [113.003045, 28.117801], [113.002808, 28.114624], [113.001129, 28.114926], [112.99919, 28.114755], [112.999166, 28.115235], [112.996872, 28.115056], [112.996304, 28.112311], [112.994933, 28.112278], [112.995193, 28.109859], [112.996493, 28.109753], [112.996777, 28.107268], [112.999095, 28.105313], [113.000538, 28.10484], [113.000538, 28.103178], [112.99919, 28.09807], [112.999544, 28.095226], [112.99997, 28.095316], [113.003068, 28.08857], [113.001555, 28.087274], [112.999544, 28.087714], [112.998031, 28.085221], [112.998693, 28.084373], [112.998788, 28.08298], [113.000561, 28.082018], [113.001058, 28.082548], [113.002146, 28.081586], [113.004298, 28.081855], [113.005599, 28.08276], [113.006048, 28.081994], [113.005173, 28.080291], [113.005812, 28.078058], [113.004913, 28.073568], [113.003139, 28.071872], [113.003589, 28.070569], [113.001815, 28.069974], [113.002099, 28.069533], [113.00075, 28.068433], [113.00172, 28.067626], [113.001531, 28.066494], [113.006214, 28.06915], [113.011133, 28.072859], [113.013947, 28.072956], [113.015863, 28.072076], [113.019174, 28.069696], [113.021303, 28.06752], [113.023171, 28.066363], [113.025252, 28.064261], [113.028279, 28.060683], [113.031661, 28.061555], [113.03256, 28.060079], [113.032087, 28.059436], [113.033341, 28.057162], [113.032607, 28.054211], [113.033246, 28.052956], [113.035043, 28.051594], [113.033222, 28.050388], [113.03528, 28.049174], [113.032868, 28.046899], [113.03528, 28.04584], [113.034925, 28.042962], [113.032347, 28.041601], [113.031496, 28.039628], [113.032016, 28.038568], [113.028587, 28.037965], [113.027712, 28.036897], [113.02634, 28.036897], [113.027546, 28.035234], [113.026695, 28.033718], [113.025134, 28.033114], [113.024472, 28.031296], [113.023597, 28.030383], [113.022391, 28.030237], [113.021374, 28.028419], [113.01416, 28.029478], [113.01416, 28.02872], [113.016218, 28.028264], [113.015887, 28.024929], [113.017069, 28.024024], [113.016738, 28.021138], [113.017424, 28.020078], [113.020522, 28.019173], [113.02258, 28.016596], [113.02258, 28.01402], [113.025134, 28.010383], [113.027901, 28.007048], [113.030479, 28.006746], [113.033033, 28.008866], [113.033719, 28.005988], [113.033222, 28.004471], [113.033908, 28.003411], [113.037858, 28.004169], [113.041287, 28.005898]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430104,\r\n          name: '岳麓区',\r\n          center: [112.911591, 28.213044],\r\n          centroid: [112.836636, 28.131691],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 2,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[112.963856, 27.995264], [112.961727, 27.995647], [112.960711, 27.996553], [112.956785, 27.99895], [112.955176, 28.000402], [112.952835, 28.003607], [112.95073, 28.007635], [112.947537, 28.01508], [112.945645, 28.014745], [112.945314, 28.01561], [112.94373, 28.015047], [112.943469, 28.016286], [112.94153, 28.015993], [112.941979, 28.0172], [112.941152, 28.017583], [112.939946, 28.01698], [112.939709, 28.018309], [112.938858, 28.018545], [112.936658, 28.017868], [112.934199, 28.01552], [112.933891, 28.017102], [112.932567, 28.016596], [112.932803, 28.014664], [112.931431, 28.014631], [112.931384, 28.013783], [112.933536, 28.012585], [112.934317, 28.010138], [112.935854, 28.009184], [112.935901, 28.008214], [112.937486, 28.006673], [112.93706, 28.004373], [112.935688, 28.003639], [112.936611, 28.002416], [112.936327, 28.000948], [112.934932, 28.001299], [112.933986, 28.000785], [112.936303, 27.99895], [112.93505, 27.998143], [112.933111, 27.99917], [112.931834, 27.997319], [112.929823, 27.996569], [112.929208, 27.995476], [112.927198, 27.994636], [112.928806, 27.992499], [112.930675, 27.992271], [112.932094, 27.992695], [112.933134, 27.991953], [112.93434, 27.993127], [112.936091, 27.992255], [112.93829, 27.991733], [112.939283, 27.989694], [112.939141, 27.987663], [112.939851, 27.98759], [112.939969, 27.986358], [112.942098, 27.985975], [112.941294, 27.983724], [112.939969, 27.983096], [112.940608, 27.982174], [112.938456, 27.981603], [112.937273, 27.981774], [112.937841, 27.984727], [112.937131, 27.98657], [112.936114, 27.986431], [112.935783, 27.984898], [112.933962, 27.984311], [112.932543, 27.984988], [112.9311, 27.984409], [112.930746, 27.983683], [112.929374, 27.98427], [112.928617, 27.983234], [112.926181, 27.98272], [112.926441, 27.980559], [112.930083, 27.980787], [112.930178, 27.978911], [112.930722, 27.977965], [112.930083, 27.977435], [112.928097, 27.977223], [112.927529, 27.97582], [112.926063, 27.975445], [112.923319, 27.974172], [112.922515, 27.974401], [112.921238, 27.975861], [112.920789, 27.977337], [112.919677, 27.978096], [112.918542, 27.977818], [112.918069, 27.976831], [112.916437, 27.978022], [112.914663, 27.978177], [112.914096, 27.977337], [112.913386, 27.978006], [112.912417, 27.977508], [112.912511, 27.976619], [112.910525, 27.974613], [112.910998, 27.973985], [112.909981, 27.973569], [112.907923, 27.971733], [112.906882, 27.97272], [112.904778, 27.972149], [112.903477, 27.972622], [112.903453, 27.974042], [112.904328, 27.9748], [112.903548, 27.976962], [112.902247, 27.976905], [112.898439, 27.979727], [112.896122, 27.979776], [112.894726, 27.979099], [112.892834, 27.979181], [112.891344, 27.977019], [112.889263, 27.976937], [112.888908, 27.975747], [112.889902, 27.974099], [112.889712, 27.973324], [112.88808, 27.973038], [112.886117, 27.973373], [112.884154, 27.975355], [112.884935, 27.976701], [112.885999, 27.97706], [112.884084, 27.979034], [112.884533, 27.980127], [112.883871, 27.983275], [112.886165, 27.982957], [112.88652, 27.983895], [112.887749, 27.984425], [112.891794, 27.984833], [112.890848, 27.985257], [112.890327, 27.987011], [112.889689, 27.987092], [112.889878, 27.988413], [112.892006, 27.989653], [112.891652, 27.990265], [112.892172, 27.993454], [112.891037, 27.99409], [112.891273, 27.995044], [112.887466, 27.996936], [112.886047, 27.996349], [112.886141, 27.993609], [112.884675, 27.993454], [112.882948, 27.992255], [112.881837, 27.993331], [112.881506, 27.995802], [112.883043, 27.996063], [112.882972, 27.99714], [112.881695, 27.997972], [112.881813, 27.998934], [112.880394, 27.999439], [112.88082, 28.000687], [112.879377, 28.001323], [112.878124, 28.004096], [112.876468, 28.002832], [112.875617, 28.002889], [112.875546, 28.004977], [112.873583, 28.00408], [112.874245, 28.003664], [112.874103, 28.002269], [112.871691, 28.002424], [112.870768, 28.001788], [112.869562, 28.001968], [112.86942, 28.000712], [112.870437, 27.999154], [112.872282, 27.999431], [112.874056, 27.998771], [112.872826, 27.998175], [112.873772, 27.997637], [112.874009, 27.996357], [112.873015, 27.994775], [112.873985, 27.991439], [112.872968, 27.990624], [112.87285, 27.98927], [112.870627, 27.988805], [112.86961, 27.989335], [112.867623, 27.988038], [112.866937, 27.986309], [112.865542, 27.986431], [112.863839, 27.985624], [112.861568, 27.986986], [112.860954, 27.987851], [112.860197, 27.986831], [112.858612, 27.986472], [112.857572, 27.988054], [112.859416, 27.989123], [112.860197, 27.991374], [112.859818, 27.992026], [112.860386, 27.993706], [112.859913, 27.994049], [112.86067, 27.996283], [112.859582, 27.997743], [112.857548, 27.997303], [112.858115, 27.998445], [112.861474, 28.000557], [112.861616, 28.001242], [112.860339, 28.002294], [112.860339, 28.004169], [112.85892, 28.004716], [112.858068, 28.006575], [112.857217, 28.006298], [112.857075, 28.007929], [112.855845, 28.008189], [112.854071, 28.00929], [112.85419, 28.010114], [112.853267, 28.011223], [112.855041, 28.013376], [112.854331, 28.014411], [112.85296, 28.014876], [112.85225, 28.017656], [112.853054, 28.020225], [112.851683, 28.021815], [112.850216, 28.022418], [112.845179, 28.02113], [112.843476, 28.019841], [112.841608, 28.020184], [112.839716, 28.019939], [112.838297, 28.022059], [112.838202, 28.022915], [112.836428, 28.023429], [112.834323, 28.024921], [112.833827, 28.026323], [112.83262, 28.025606], [112.830941, 28.026723], [112.830823, 28.027579], [112.83184, 28.028068], [112.833448, 28.029699], [112.832857, 28.032568], [112.834158, 28.034957], [112.831627, 28.036082], [112.831958, 28.037378], [112.833046, 28.038748], [112.833164, 28.040256], [112.831414, 28.042563], [112.827488, 28.041324], [112.827252, 28.042392], [112.825478, 28.043215], [112.82387, 28.043321], [112.823941, 28.044829], [112.823042, 28.045603], [112.824201, 28.046166], [112.824934, 28.049353], [112.822498, 28.0521], [112.821978, 28.053363], [112.822333, 28.054211], [112.820606, 28.055417], [112.819305, 28.055091], [112.815805, 28.054855], [112.81642, 28.056192], [112.815758, 28.056615], [112.816018, 28.057936], [112.81668, 28.058074], [112.816231, 28.059908], [112.816444, 28.061669], [112.817106, 28.062525], [112.816325, 28.064505], [112.816775, 28.065092], [112.816136, 28.066689], [112.817579, 28.068482], [112.818312, 28.07078], [112.816467, 28.069957], [112.814694, 28.069786], [112.813771, 28.070291], [112.812849, 28.06955], [112.812589, 28.067838], [112.808663, 28.068384], [112.807031, 28.070927], [112.805281, 28.070414], [112.804855, 28.068963], [112.803483, 28.067789], [112.802537, 28.067789], [112.801426, 28.070373], [112.799368, 28.072182], [112.797855, 28.073087], [112.796128, 28.070267], [112.796104, 28.069297], [112.794189, 28.069265], [112.791564, 28.067912], [112.789175, 28.069126], [112.787519, 28.072158], [112.786337, 28.072101], [112.782813, 28.073836], [112.781299, 28.072744], [112.779384, 28.072492], [112.77709, 28.076175], [112.776404, 28.079199], [112.775268, 28.079989], [112.773518, 28.080054], [112.77191, 28.080779], [112.769924, 28.082442], [112.768575, 28.081643], [112.767795, 28.082132], [112.765998, 28.081708], [112.765028, 28.084585], [112.762284, 28.086076], [112.761717, 28.087747], [112.760014, 28.087763], [112.759967, 28.089409], [112.758973, 28.090435], [112.756987, 28.089409], [112.755024, 28.089775], [112.751949, 28.086924], [112.750554, 28.086761], [112.748922, 28.085131], [112.747787, 28.084618], [112.746486, 28.082499], [112.744381, 28.082613], [112.744003, 28.081782], [112.742371, 28.081757], [112.738043, 28.080307], [112.735512, 28.078922], [112.733029, 28.079777], [112.729836, 28.079614], [112.728394, 28.080502], [112.726241, 28.080731], [112.724278, 28.079142], [112.723332, 28.079068], [112.722528, 28.079916], [112.719809, 28.079182], [112.717349, 28.080087], [112.715575, 28.078913], [112.713683, 28.07981], [112.711673, 28.080054], [112.709426, 28.07981], [112.703513, 28.082589], [112.701314, 28.082531], [112.695922, 28.083648], [112.690553, 28.086125], [112.689347, 28.086378], [112.688874, 28.087266], [112.689536, 28.088724], [112.688188, 28.092285], [112.685776, 28.093727], [112.683245, 28.093312], [112.678752, 28.094069], [112.678089, 28.096017], [112.676883, 28.09776], [112.672768, 28.097157], [112.668251, 28.100677], [112.66721, 28.10225], [112.665058, 28.10247], [112.662859, 28.103912], [112.65995, 28.10528], [112.658838, 28.106429], [112.657608, 28.106429], [112.656828, 28.10528], [112.654794, 28.107064], [112.653659, 28.106902], [112.65205, 28.108539], [112.65205, 28.109671], [112.653682, 28.112702], [112.649638, 28.114519], [112.646776, 28.114364], [112.646114, 28.114934], [112.642519, 28.113761], [112.641928, 28.113158], [112.635968, 28.113557], [112.629914, 28.112629], [112.623907, 28.111073], [112.616977, 28.11293], [112.61544, 28.11306], [112.615156, 28.11592], [112.614423, 28.118526], [112.614754, 28.120343], [112.616575, 28.121084], [112.615818, 28.121858], [112.613831, 28.12532], [112.611396, 28.127104], [112.61272, 28.128163], [112.618065, 28.129604], [112.61972, 28.131869], [112.623694, 28.13248], [112.626059, 28.133742], [112.626886, 28.134654], [112.630812, 28.140746], [112.630245, 28.144208], [112.631309, 28.145038], [112.630931, 28.145951], [112.632208, 28.148166], [112.630529, 28.150886], [112.630552, 28.152343], [112.6319, 28.153141], [112.634313, 28.155234], [112.63559, 28.158532], [112.633698, 28.161667], [112.63365, 28.164094], [112.632492, 28.166512], [112.632633, 28.167326], [112.630718, 28.168946], [112.629322, 28.170656], [112.630387, 28.171698], [112.630671, 28.173563], [112.631451, 28.17432], [112.636039, 28.176144], [112.637529, 28.177927], [112.639279, 28.177438], [112.637884, 28.179124], [112.638901, 28.180898], [112.639752, 28.183886], [112.639397, 28.191555], [112.64233, 28.1914], [112.645215, 28.191547], [112.646091, 28.193183], [112.647486, 28.194046], [112.650135, 28.1949], [112.65399, 28.196545], [112.654486, 28.195495], [112.655905, 28.197351], [112.658956, 28.198433], [112.659855, 28.199931], [112.662196, 28.202332], [112.664017, 28.203602], [112.666051, 28.204245], [112.668038, 28.203846], [112.669528, 28.204676], [112.668393, 28.202462], [112.666643, 28.200419], [112.667447, 28.200232], [112.66747, 28.198563], [112.67071, 28.198165], [112.670829, 28.196651], [112.671467, 28.19582], [112.671538, 28.194062], [112.672248, 28.193134], [112.671775, 28.190081], [112.676623, 28.188421], [112.67641, 28.18711], [112.677853, 28.187037], [112.678728, 28.185506], [112.68088, 28.184668], [112.682157, 28.183308], [112.682205, 28.182242], [112.686367, 28.185238], [112.687739, 28.184228], [112.688164, 28.183219], [112.691404, 28.183487], [112.695047, 28.18409], [112.6998, 28.183072], [112.701953, 28.182014], [112.705003, 28.180117], [112.706068, 28.178529], [112.705926, 28.175639], [112.707581, 28.172969], [112.707487, 28.172285], [112.709804, 28.171943], [112.711696, 28.169223], [112.712595, 28.16744], [112.714653, 28.167399], [112.715906, 28.168197], [112.717278, 28.1702], [112.71917, 28.171487], [112.722765, 28.172545], [112.724822, 28.174735], [112.727235, 28.175232], [112.730617, 28.177764], [112.734401, 28.177153], [112.735631, 28.176062], [112.735938, 28.175004], [112.737357, 28.174849], [112.738516, 28.175753], [112.739746, 28.175533], [112.74204, 28.172846], [112.742986, 28.17296], [112.744901, 28.171747], [112.743837, 28.170876], [112.741732, 28.172049], [112.740786, 28.171674], [112.7423, 28.17016], [112.741638, 28.168417], [112.743837, 28.167171], [112.744381, 28.1663], [112.746226, 28.165885], [112.746628, 28.165201], [112.75202, 28.163173], [112.755118, 28.163361], [112.757318, 28.164427], [112.758004, 28.166276], [112.759092, 28.167416], [112.761551, 28.167473], [112.762474, 28.166447], [112.761859, 28.164256], [112.76342, 28.163483], [112.7642, 28.161667], [112.764768, 28.162538], [112.766612, 28.161056], [112.768599, 28.161439], [112.770397, 28.162498], [112.772454, 28.161667], [112.773566, 28.162416], [112.772194, 28.163817], [112.772927, 28.164199], [112.775339, 28.164313], [112.777137, 28.163743], [112.777042, 28.162001], [112.779431, 28.161854], [112.78111, 28.160299], [112.781465, 28.158312], [112.78409, 28.157612], [112.787046, 28.155438], [112.788678, 28.152677], [112.78882, 28.150104], [112.789246, 28.148964], [112.788796, 28.145983], [112.790381, 28.144314], [112.7918, 28.143841], [112.793243, 28.142253], [112.794141, 28.140079], [112.797098, 28.139109], [112.797689, 28.138148], [112.800811, 28.140176], [112.803578, 28.140852], [112.806085, 28.142253], [112.808592, 28.142408], [112.807859, 28.144623], [112.808663, 28.146911], [112.810578, 28.146455], [112.813062, 28.149395], [112.814008, 28.149697], [112.814764, 28.151154], [112.814291, 28.153825], [112.814835, 28.154729], [112.816373, 28.155356], [112.81888, 28.154941], [112.820062, 28.153825], [112.822782, 28.1535], [112.823728, 28.155617], [112.825904, 28.157571], [112.82614, 28.158589], [112.827867, 28.159249], [112.827961, 28.157286], [112.82886, 28.155674], [112.83035, 28.154827], [112.832006, 28.155902], [112.832455, 28.157604], [112.833117, 28.15736], [112.834938, 28.154314], [112.834276, 28.153345], [112.836357, 28.153728], [112.83884, 28.153044], [112.839172, 28.151325], [112.840662, 28.150055], [112.841679, 28.15157], [112.84279, 28.150226], [112.845061, 28.151342], [112.846219, 28.155747], [112.85296, 28.159289], [112.856696, 28.162628], [112.855609, 28.164273], [112.858045, 28.165006], [112.85698, 28.165462], [112.856838, 28.167603], [112.855703, 28.168751], [112.854024, 28.168751], [112.851399, 28.168132], [112.85102, 28.169345], [112.849956, 28.169989], [112.848608, 28.169557], [112.845794, 28.170274], [112.846669, 28.171226], [112.845841, 28.17248], [112.846763, 28.173441], [112.844256, 28.174564], [112.844753, 28.175851], [112.851848, 28.178033], [112.859866, 28.185441], [112.861994, 28.186198], [112.863224, 28.186101], [112.861332, 28.188185], [112.861805, 28.189202], [112.861545, 28.190961], [112.860362, 28.192173], [112.85918, 28.192116], [112.859062, 28.193028], [112.858021, 28.192817], [112.856176, 28.193386], [112.855963, 28.194143], [112.858328, 28.196423], [112.859605, 28.196602], [112.859913, 28.198181], [112.857761, 28.199361], [112.857595, 28.200623], [112.853267, 28.201665], [112.854781, 28.202137], [112.854852, 28.203195], [112.854048, 28.205995], [112.852818, 28.206662], [112.850358, 28.209926], [112.849341, 28.210691], [112.849247, 28.20982], [112.847946, 28.210935], [112.849672, 28.211806], [112.848703, 28.212262], [112.845723, 28.211513], [112.844044, 28.211668], [112.843121, 28.211212], [112.841631, 28.213914], [112.841347, 28.216112], [112.840543, 28.216055], [112.839314, 28.218569], [112.838344, 28.219261], [112.83709, 28.219082], [112.836428, 28.220596], [112.833141, 28.222158], [112.832999, 28.223347], [112.831745, 28.224087], [112.832195, 28.226122], [112.831509, 28.227131], [112.829546, 28.22626], [112.82886, 28.224901], [112.828458, 28.225975], [112.827536, 28.225552], [112.827181, 28.228303], [112.825927, 28.229491], [112.824981, 28.228986], [112.823633, 28.23006], [112.821765, 28.230158], [112.821694, 28.228758], [112.82037, 28.227529], [112.819542, 28.225772], [112.818028, 28.224958], [112.817413, 28.225715], [112.816846, 28.224803], [112.8159, 28.22543], [112.814528, 28.22722], [112.813889, 28.230508], [112.812778, 28.232095], [112.812329, 28.230166], [112.810626, 28.231566], [112.809065, 28.230402], [112.808544, 28.232314], [112.807433, 28.232778], [112.806723, 28.234235], [112.805943, 28.234601], [112.805943, 28.236977], [112.805375, 28.238564], [112.803625, 28.2381], [112.802868, 28.238922], [112.803885, 28.239068], [112.803223, 28.240215], [112.800716, 28.241094], [112.799699, 28.243096], [112.798777, 28.243795], [112.799581, 28.245707], [112.800503, 28.245781], [112.802514, 28.247628], [112.803507, 28.246594], [112.805186, 28.246041], [112.804571, 28.247099], [112.805825, 28.247205], [112.806581, 28.249767], [112.806392, 28.250711], [112.807646, 28.251183], [112.810318, 28.250793], [112.811312, 28.250963], [112.812376, 28.25028], [112.814173, 28.251411], [112.81467, 28.252298], [112.816822, 28.252192], [112.817721, 28.25325], [112.818998, 28.252688], [112.820772, 28.250614], [112.822356, 28.250247], [112.822451, 28.24849], [112.82536, 28.248335], [112.826329, 28.247196], [112.826069, 28.245911], [112.82983, 28.245423], [112.832881, 28.24731], [112.834512, 28.247384], [112.8378, 28.246448], [112.840733, 28.248018], [112.841206, 28.249645], [112.843831, 28.248872], [112.845534, 28.249287], [112.846432, 28.247701], [112.849601, 28.249003], [112.849436, 28.2498], [112.850382, 28.250801], [112.850429, 28.254429], [112.852912, 28.253111], [112.854355, 28.253046], [112.855561, 28.253697], [112.856602, 28.253469], [112.856578, 28.251354], [112.85821, 28.252338], [112.858447, 28.251126], [112.859535, 28.251582], [112.861048, 28.251045], [112.861876, 28.252257], [112.861143, 28.253429], [112.862798, 28.253746], [112.86812, 28.256675], [112.868734, 28.255796], [112.870083, 28.255983], [112.871478, 28.255186], [112.873086, 28.25582], [112.874198, 28.255641], [112.875262, 28.254323], [112.876539, 28.255641], [112.877603, 28.255723], [112.87836, 28.25674], [112.879164, 28.256374], [112.8816, 28.257293], [112.882499, 28.25652], [112.884651, 28.256154], [112.885242, 28.256723], [112.887607, 28.255999], [112.888624, 28.256862], [112.890989, 28.257472], [112.892834, 28.258676], [112.894939, 28.25809], [112.896571, 28.260059], [112.89896, 28.258879], [112.901703, 28.258961], [112.904044, 28.258635], [112.904872, 28.261751], [112.910643, 28.265908], [112.914403, 28.266103], [112.917076, 28.268519], [112.917454, 28.269959], [112.918164, 28.270244], [112.92041, 28.272692], [112.923414, 28.272318], [112.927316, 28.273701], [112.927387, 28.272399], [112.930131, 28.271179], [112.930746, 28.26917], [112.932354, 28.268796], [112.932827, 28.26782], [112.934009, 28.267901], [112.933796, 28.264509], [112.936209, 28.265168], [112.936185, 28.266103], [112.938929, 28.266673], [112.93926, 28.265347], [112.940679, 28.265062], [112.941885, 28.2642], [112.943966, 28.264151], [112.945361, 28.264981], [112.947017, 28.265038], [112.948885, 28.264322], [112.950943, 28.264371], [112.951534, 28.265518], [112.950328, 28.265518], [112.950092, 28.266388], [112.950919, 28.268178], [112.951889, 28.268755], [112.950967, 28.269129], [112.951605, 28.270545], [112.95319, 28.269463], [112.953734, 28.271285], [112.955011, 28.271082], [112.961467, 28.273131], [112.9622, 28.275311], [112.964022, 28.271757], [112.971424, 28.251207], [112.971803, 28.236025], [112.96738, 28.195625], [112.967285, 28.19473], [112.960545, 28.155674], [112.957068, 28.147604], [112.95572, 28.137668], [112.957021, 28.130476], [112.956761, 28.125744], [112.953734, 28.114209], [112.948862, 28.106747], [112.938905, 28.096489], [112.932496, 28.090444], [112.929256, 28.084349], [112.927955, 28.073502], [112.929161, 28.061848], [112.930887, 28.053054], [112.933938, 28.047715], [112.945007, 28.033294], [112.96064, 28.009421], [112.962697, 27.996561], [112.963856, 27.995264]]], [[[112.770751, 28.034704], [112.769167, 28.036595], [112.767984, 28.036856], [112.767156, 28.0379], [112.765572, 28.038201], [112.765335, 28.038813], [112.766352, 28.04059], [112.765856, 28.041601], [112.769238, 28.043337], [112.770964, 28.043003], [112.771768, 28.041862], [112.773305, 28.041748], [112.773376, 28.043867], [112.774275, 28.043671], [112.773518, 28.046826], [112.772667, 28.049182], [112.773329, 28.050209], [112.77541, 28.050453], [112.779478, 28.047005], [112.780401, 28.046614], [112.782387, 28.048448], [112.783522, 28.051138], [112.784941, 28.049304], [112.787117, 28.050796], [112.790357, 28.05051], [112.793385, 28.049622], [112.794804, 28.049826], [112.794993, 28.047975], [112.796128, 28.046687], [112.79873, 28.046891], [112.800503, 28.044405], [112.800693, 28.042661], [112.801591, 28.042074], [112.803767, 28.043003], [112.803838, 28.039995], [112.809798, 28.037231], [112.809301, 28.035373], [112.807693, 28.031655], [112.807291, 28.029201], [112.804713, 28.028688], [112.80398, 28.027726], [112.805044, 28.025581], [112.80547, 28.023274], [112.804571, 28.022948], [112.802939, 28.024261], [112.800385, 28.024848], [112.799037, 28.025508], [112.796648, 28.024733], [112.795371, 28.023804], [112.794543, 28.02413], [112.792817, 28.022508], [112.791634, 28.022141], [112.790972, 28.023298], [112.791398, 28.024], [112.790215, 28.025076], [112.790121, 28.027505], [112.792155, 28.029397], [112.790523, 28.031843], [112.78979, 28.032185], [112.790074, 28.034435], [112.788111, 28.034892], [112.785556, 28.034492], [112.785651, 28.031712], [112.786242, 28.030856], [112.78584, 28.029723], [112.785746, 28.026788], [112.784729, 28.027465], [112.78461, 28.028565], [112.782032, 28.030856], [112.781607, 28.036693], [112.780306, 28.037337], [112.779407, 28.035707], [112.77787, 28.03622], [112.77813, 28.037981], [112.776475, 28.037623], [112.775623, 28.036025], [112.772383, 28.03618], [112.770751, 28.034704]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430105,\r\n          name: '开福区',\r\n          center: [112.985525, 28.201336],\r\n          centroid: [113.001374, 28.302523],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 3,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[112.976343, 28.195307], [112.96738, 28.195625], [112.971803, 28.236025], [112.971424, 28.251207], [112.964022, 28.271757], [112.9622, 28.275311], [112.960048, 28.279468], [112.949169, 28.296677], [112.938172, 28.308517], [112.925613, 28.319966], [112.915065, 28.329446], [112.91069, 28.333755], [112.908845, 28.336364], [112.915373, 28.339242], [112.920008, 28.343087], [112.925921, 28.346639], [112.930225, 28.349062], [112.935452, 28.348834], [112.93751, 28.34694], [112.940419, 28.346493], [112.942996, 28.344981], [112.944297, 28.34581], [112.945669, 28.345209], [112.947372, 28.346566], [112.949358, 28.347395], [112.948933, 28.348907], [112.947372, 28.349663], [112.948743, 28.351175], [112.949429, 28.353662], [112.952102, 28.355775], [112.953379, 28.358498], [112.951582, 28.360083], [112.954514, 28.362879], [112.955531, 28.366577], [112.956643, 28.36756], [112.956312, 28.371185], [112.957754, 28.373753], [112.957589, 28.375419], [112.956643, 28.377158], [112.957329, 28.379043], [112.961278, 28.380473], [112.96317, 28.380099], [112.962839, 28.381001], [112.965582, 28.381083], [112.964471, 28.381757], [112.965228, 28.383496], [112.965748, 28.382139], [112.969958, 28.383724], [112.971069, 28.383122], [112.973813, 28.38478], [112.975185, 28.384707], [112.975705, 28.386137], [112.977242, 28.386893], [112.980388, 28.38946], [112.981878, 28.388583], [112.98429, 28.388282], [112.98682, 28.383943], [112.987885, 28.383407], [112.989895, 28.384731], [112.990794, 28.384162], [112.989398, 28.382017], [112.991196, 28.382464], [112.991409, 28.381481], [112.989895, 28.380124], [112.99025, 28.378954], [112.988996, 28.378726], [112.989398, 28.378092], [112.990983, 28.377751], [112.992567, 28.378848], [112.993892, 28.37771], [112.995831, 28.380051], [112.99751, 28.380205], [112.999213, 28.378466], [113.000727, 28.379449], [113.000443, 28.377588], [113.007987, 28.376946], [113.010376, 28.378336], [113.011322, 28.377962], [113.012434, 28.378832], [113.013593, 28.377881], [113.015697, 28.378263], [113.016975, 28.379206], [113.016336, 28.380676], [113.017282, 28.380945], [113.019127, 28.377735], [113.0196, 28.379051], [113.021563, 28.376524], [113.02381, 28.375394], [113.024141, 28.373468], [113.02686, 28.375126], [113.029769, 28.379433], [113.035658, 28.378109], [113.03729, 28.37498], [113.037101, 28.373086], [113.039419, 28.371014], [113.044527, 28.367918], [113.045639, 28.362554], [113.049092, 28.363261], [113.052639, 28.361489], [113.055737, 28.360847], [113.05595, 28.35658], [113.058741, 28.356466], [113.060586, 28.357295], [113.062525, 28.356613], [113.061177, 28.351443], [113.063282, 28.349663], [113.064866, 28.351589], [113.066546, 28.352118], [113.067965, 28.35076], [113.069171, 28.351142], [113.071087, 28.349818], [113.070708, 28.35189], [113.073026, 28.353215], [113.073759, 28.357824], [113.07629, 28.358352], [113.080074, 28.35658], [113.081753, 28.353735], [113.083668, 28.351403], [113.079695, 28.350752], [113.080003, 28.350004], [113.081705, 28.34872], [113.082178, 28.346501], [113.081705, 28.345022], [113.079884, 28.343705], [113.076857, 28.344038], [113.076313, 28.342095], [113.077567, 28.339982], [113.077023, 28.337811], [113.075982, 28.336429], [113.075888, 28.334852], [113.075131, 28.333942], [113.073333, 28.333909], [113.072151, 28.333153], [113.071134, 28.330901], [113.070779, 28.327852], [113.069691, 28.325942], [113.066711, 28.323942], [113.062643, 28.321982], [113.06016, 28.321617], [113.059261, 28.320112], [113.059924, 28.316112], [113.062856, 28.314079], [113.064015, 28.312038], [113.060893, 28.311193], [113.060302, 28.310201], [113.06139, 28.306111], [113.06139, 28.304818], [113.06068, 28.303598], [113.059072, 28.303793], [113.057629, 28.302785], [113.060964, 28.300052], [113.062218, 28.299337], [113.063329, 28.297946], [113.063164, 28.296929], [113.060704, 28.294343], [113.059309, 28.293798], [113.056825, 28.294067], [113.055619, 28.29362], [113.054295, 28.291611], [113.052947, 28.290773], [113.050534, 28.289927], [113.046206, 28.289439], [113.04299, 28.287723], [113.041193, 28.286219], [113.03826, 28.282095], [113.035777, 28.276751], [113.03107, 28.269064], [113.03003, 28.265819], [113.029935, 28.262988], [113.033695, 28.261214], [113.03554, 28.259628], [113.035682, 28.257472], [113.037125, 28.258001], [113.037787, 28.257399], [113.038023, 28.254901], [113.038686, 28.25373], [113.037527, 28.252599], [113.038591, 28.251655], [113.04001, 28.251199], [113.040223, 28.252102], [113.042162, 28.25377], [113.045, 28.25434], [113.045804, 28.253469], [113.047081, 28.253811], [113.047815, 28.255316], [113.048713, 28.255886], [113.05044, 28.255812], [113.052379, 28.255056], [113.051599, 28.254031], [113.053018, 28.25434], [113.052545, 28.253429], [113.053704, 28.25242], [113.052994, 28.248913], [113.053396, 28.247847], [113.056565, 28.246562], [113.057511, 28.246887], [113.058292, 28.246057], [113.059048, 28.240354], [113.059025, 28.238319], [113.058008, 28.233624], [113.058268, 28.2329], [113.056802, 28.231387], [113.055572, 28.230727], [113.055359, 28.229198], [113.058552, 28.228514], [113.059947, 28.226113], [113.057724, 28.224014], [113.056258, 28.224885], [113.055808, 28.223802], [113.057086, 28.223094], [113.052781, 28.220034], [113.052923, 28.21931], [113.050511, 28.219212], [113.045473, 28.217406], [113.040578, 28.21616], [113.038969, 28.217634], [113.038544, 28.2173], [113.039773, 28.215933], [113.037787, 28.215102], [113.032868, 28.217194], [113.027925, 28.21861], [113.024046, 28.219269], [113.019458, 28.218683], [113.013593, 28.216909], [113.011937, 28.216551], [113.010565, 28.216771], [113.008224, 28.218879], [113.005835, 28.218236], [113.003234, 28.21507], [113.001413, 28.213524], [113.001223, 28.212815], [113.00224, 28.211407], [113.003896, 28.210683], [113.004771, 28.207883], [113.006474, 28.207257], [113.006852, 28.206011], [113.004653, 28.205238], [113.000656, 28.204929], [112.997842, 28.206443], [112.994436, 28.20615], [112.994578, 28.204815], [112.992662, 28.203171], [112.991834, 28.200834], [112.991716, 28.197863], [112.987317, 28.198059], [112.984337, 28.19845], [112.979229, 28.200053], [112.976816, 28.200387], [112.97606, 28.19985], [112.976343, 28.195307]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430111,\r\n          name: '雨花区',\r\n          center: [113.016337, 28.109937],\r\n          centroid: [113.083728, 28.062826],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 4,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[112.986773, 28.185799], [112.994176, 28.18593], [113.004605, 28.185221], [113.011299, 28.185042], [113.030337, 28.184187], [113.030242, 28.182079], [113.034358, 28.182274], [113.034358, 28.180443], [113.036108, 28.180377], [113.03703, 28.179506], [113.038567, 28.176258], [113.040861, 28.175541], [113.042351, 28.175484], [113.043865, 28.176111], [113.044906, 28.177235], [113.045166, 28.178513], [113.043865, 28.181395], [113.043628, 28.18282], [113.044267, 28.184725], [113.050132, 28.190122], [113.056754, 28.185742], [113.065032, 28.180125], [113.068509, 28.177113], [113.073357, 28.174556], [113.080286, 28.173156], [113.083148, 28.172993], [113.086956, 28.173775], [113.091733, 28.175427], [113.095375, 28.1773], [113.101004, 28.180841], [113.104788, 28.182274], [113.107177, 28.18238], [113.109684, 28.181045], [113.11115, 28.179311], [113.114863, 28.172724], [113.115171, 28.171788], [113.114911, 28.169443], [113.113468, 28.168059], [113.112262, 28.167497], [113.108832, 28.167163], [113.106255, 28.168034], [113.102258, 28.169956], [113.098781, 28.171226], [113.095446, 28.171275], [113.092845, 28.170884], [113.089794, 28.16937], [113.083408, 28.164655], [113.080097, 28.161374], [113.077496, 28.157425], [113.07629, 28.15385], [113.07435, 28.15275], [113.073239, 28.150324], [113.073759, 28.147449], [113.0748, 28.144802], [113.0748, 28.140673], [113.075367, 28.137619], [113.077236, 28.134386], [113.079743, 28.131519], [113.084922, 28.126192], [113.086577, 28.123015], [113.089534, 28.11368], [113.103606, 28.098388], [113.117347, 28.089148], [113.126263, 28.088847], [113.137071, 28.091878], [113.152183, 28.08945], [113.155447, 28.089604], [113.161289, 28.082336], [113.165735, 28.078547], [113.168502, 28.074912], [113.173634, 28.068857], [113.175361, 28.062345], [113.173634, 28.057642], [113.17432, 28.056281], [113.183544, 28.056721], [113.184915, 28.054643], [113.186382, 28.053396], [113.18676, 28.051138], [113.18527, 28.047307], [113.18423, 28.040998], [113.184537, 28.037557], [113.185341, 28.031508], [113.185388, 28.029087], [113.184608, 28.025092], [113.181037, 28.019018], [113.177229, 28.014933], [113.175834, 28.015031], [113.169945, 28.014085], [113.166232, 28.011451], [113.165238, 28.01004], [113.164103, 28.00673], [113.165215, 28.004373], [113.16907, 28.001446], [113.170394, 28.000858], [113.170654, 27.999896], [113.168526, 27.9986], [113.168076, 27.996259], [113.166894, 27.99546], [113.163606, 27.996112], [113.162046, 27.99767], [113.16337, 27.998722], [113.162022, 28.000312], [113.160698, 28.000076], [113.160272, 27.998208], [113.156653, 27.995965], [113.14944, 27.993437], [113.148636, 27.992295], [113.151001, 27.988666], [113.151166, 27.987369], [113.149771, 27.984352], [113.149369, 27.982598], [113.149558, 27.980853], [113.151687, 27.97874], [113.152302, 27.977174], [113.153082, 27.973797], [113.15365, 27.973128], [113.156488, 27.971766], [113.1589, 27.968756], [113.159066, 27.967459], [113.157954, 27.96626], [113.153744, 27.963935], [113.152822, 27.963013], [113.151308, 27.959154], [113.149724, 27.956536], [113.148045, 27.954871], [113.146531, 27.953884], [113.140595, 27.952995], [113.136787, 27.952146], [113.136503, 27.950841], [113.138159, 27.947651], [113.138845, 27.945693], [113.138561, 27.944444], [113.136503, 27.943057], [113.132435, 27.942706], [113.13104, 27.942233], [113.129905, 27.940014], [113.130638, 27.93799], [113.132908, 27.935608], [113.132743, 27.931764], [113.132956, 27.930581], [113.134138, 27.929757], [113.137071, 27.9289], [113.139389, 27.927529], [113.136811, 27.920935], [113.136834, 27.916651], [113.136621, 27.91501], [113.13577, 27.913696], [113.13279, 27.912856], [113.127516, 27.91288], [113.1221, 27.914316], [113.120208, 27.915802], [113.118624, 27.918209], [113.118198, 27.920454], [113.116684, 27.92269], [113.112025, 27.926893], [113.10862, 27.933037], [113.107744, 27.933535], [113.103346, 27.933453], [113.101808, 27.933706], [113.098947, 27.936024], [113.095399, 27.938553], [113.093129, 27.940658], [113.08776, 27.947104], [113.086672, 27.950107], [113.087996, 27.953435], [113.089345, 27.957971], [113.090905, 27.962401], [113.091284, 27.964612], [113.090953, 27.96511], [113.089179, 27.964971], [113.085371, 27.963821], [113.08232, 27.964277], [113.080807, 27.965999], [113.080689, 27.967965], [113.078702, 27.968886], [113.074823, 27.968927], [113.07357, 27.970428], [113.073712, 27.972011], [113.075273, 27.974009], [113.078205, 27.976497], [113.084354, 27.98073], [113.086838, 27.983267], [113.090314, 27.987394], [113.090953, 27.98989], [113.088919, 27.992165], [113.088067, 27.993731], [113.08698, 27.996854], [113.084946, 27.998355], [113.080239, 28.00231], [113.076739, 28.006273], [113.07584, 28.008605], [113.07435, 28.009886], [113.071725, 28.010889], [113.068225, 28.010734], [113.04772, 28.007553], [113.041689, 28.006183], [113.041287, 28.005898], [113.037858, 28.004169], [113.033908, 28.003411], [113.033222, 28.004471], [113.033719, 28.005988], [113.033033, 28.008866], [113.030479, 28.006746], [113.027901, 28.007048], [113.025134, 28.010383], [113.02258, 28.01402], [113.02258, 28.016596], [113.020522, 28.019173], [113.017424, 28.020078], [113.016738, 28.021138], [113.017069, 28.024024], [113.015887, 28.024929], [113.016218, 28.028264], [113.01416, 28.02872], [113.01416, 28.029478], [113.021374, 28.028419], [113.022391, 28.030237], [113.023597, 28.030383], [113.024472, 28.031296], [113.025134, 28.033114], [113.026695, 28.033718], [113.027546, 28.035234], [113.02634, 28.036897], [113.027712, 28.036897], [113.028587, 28.037965], [113.032016, 28.038568], [113.031496, 28.039628], [113.032347, 28.041601], [113.034925, 28.042962], [113.03528, 28.04584], [113.032868, 28.046899], [113.03528, 28.049174], [113.033222, 28.050388], [113.035043, 28.051594], [113.033246, 28.052956], [113.032607, 28.054211], [113.033341, 28.057162], [113.032087, 28.059436], [113.03256, 28.060079], [113.031661, 28.061555], [113.028279, 28.060683], [113.025252, 28.064261], [113.023171, 28.066363], [113.021303, 28.06752], [113.019174, 28.069696], [113.015863, 28.072076], [113.013947, 28.072956], [113.011133, 28.072859], [113.006214, 28.06915], [113.001531, 28.066494], [113.00172, 28.067626], [113.00075, 28.068433], [113.002099, 28.069533], [113.001815, 28.069974], [113.003589, 28.070569], [113.003139, 28.071872], [113.004913, 28.073568], [113.005812, 28.078058], [113.005173, 28.080291], [113.006048, 28.081994], [113.005599, 28.08276], [113.004298, 28.081855], [113.002146, 28.081586], [113.001058, 28.082548], [113.000561, 28.082018], [112.998788, 28.08298], [112.998693, 28.084373], [112.998031, 28.085221], [112.999544, 28.087714], [113.001555, 28.087274], [113.003068, 28.08857], [112.99997, 28.095316], [112.999544, 28.095226], [112.99919, 28.09807], [113.000538, 28.103178], [113.000538, 28.10484], [112.999095, 28.105313], [112.996777, 28.107268], [112.996493, 28.109753], [112.995193, 28.109859], [112.994933, 28.112278], [112.996304, 28.112311], [112.996872, 28.115056], [112.999166, 28.115235], [112.99919, 28.114755], [113.001129, 28.114926], [113.002808, 28.114624], [113.003045, 28.117801], [113.005552, 28.120661], [113.000656, 28.121883], [113.001247, 28.123047], [113.003849, 28.122151], [113.006781, 28.1233], [113.005268, 28.12589], [113.004818, 28.12914], [113.002335, 28.132716], [113.00068, 28.136805], [112.999639, 28.138344], [112.996612, 28.141178], [112.99472, 28.143825], [112.993916, 28.147213], [112.991054, 28.14661], [112.986229, 28.14433], [112.98526, 28.148524], [112.985283, 28.150918], [112.983982, 28.156285], [112.984077, 28.157254], [112.985496, 28.160063], [112.986253, 28.163361], [112.985165, 28.166968], [112.985189, 28.170656], [112.985472, 28.174629], [112.986324, 28.178228], [112.986584, 28.18032], [112.986773, 28.185799]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430112,\r\n          name: '望城区',\r\n          center: [112.819549, 28.347458],\r\n          centroid: [112.821939, 28.368553],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 5,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[112.669528, 28.204676], [112.670829, 28.205433], [112.674968, 28.205637], [112.680171, 28.203285], [112.68185, 28.203089], [112.685326, 28.204318], [112.686958, 28.205531], [112.689607, 28.208396], [112.69157, 28.213108], [112.692067, 28.213792], [112.69954, 28.217682], [112.704767, 28.222167], [112.70621, 28.224502], [112.706541, 28.225967], [112.704152, 28.228929], [112.700368, 28.232713], [112.698263, 28.236293], [112.697695, 28.238995], [112.700037, 28.24168], [112.700652, 28.243454], [112.702213, 28.244617], [112.704199, 28.250345], [112.702993, 28.254071], [112.700936, 28.256504], [112.700557, 28.25892], [112.70103, 28.262996], [112.700013, 28.264891], [112.699777, 28.26956], [112.700392, 28.272163], [112.702402, 28.274116], [112.709923, 28.275913], [112.715244, 28.278077], [112.717325, 28.2802], [112.716285, 28.280916], [112.715126, 28.280785], [112.712099, 28.27911], [112.710963, 28.278809], [112.70997, 28.279362], [112.709946, 28.280997], [112.714085, 28.281957], [112.718792, 28.283665], [112.719667, 28.285592], [112.719194, 28.290497], [112.718721, 28.291285], [112.715622, 28.293668], [112.713376, 28.294815], [112.711531, 28.29632], [112.709095, 28.300573], [112.706966, 28.305509], [112.707439, 28.308111], [112.710632, 28.308664], [112.711886, 28.309924], [112.71198, 28.31151], [112.711082, 28.312965], [112.709, 28.314738], [112.708385, 28.316372], [112.709119, 28.318356], [112.714818, 28.321031], [112.716545, 28.322129], [112.717231, 28.323438], [112.716261, 28.32743], [112.716308, 28.328617], [112.719738, 28.329226], [112.721204, 28.329137], [112.721701, 28.33021], [112.719619, 28.333234], [112.718248, 28.334681], [112.715362, 28.338364], [112.711484, 28.343843], [112.708953, 28.346176], [112.707581, 28.347859], [112.70472, 28.350582], [112.703632, 28.35124], [112.702567, 28.353426], [112.701125, 28.359051], [112.701621, 28.361619], [112.702662, 28.36348], [112.70453, 28.364358], [112.707392, 28.364903], [112.710372, 28.365845], [112.71373, 28.36752], [112.716805, 28.369852], [112.721771, 28.371859], [112.723711, 28.37437], [112.723829, 28.3755], [112.722363, 28.382269], [112.721346, 28.382854], [112.718224, 28.382968], [112.71321, 28.381806], [112.70926, 28.381635], [112.705642, 28.383106], [112.704294, 28.383147], [112.698027, 28.382716], [112.696466, 28.383878], [112.696631, 28.385909], [112.700155, 28.389013], [112.701409, 28.390728], [112.702828, 28.393905], [112.702213, 28.395871], [112.700226, 28.397309], [112.690269, 28.398178], [112.686533, 28.398975], [112.683694, 28.400396], [112.681684, 28.402062], [112.679508, 28.405588], [112.678137, 28.410649], [112.678184, 28.412623], [112.678893, 28.415572], [112.680833, 28.418025], [112.682015, 28.420584], [112.679958, 28.424166], [112.677995, 28.425888], [112.675937, 28.426651], [112.672508, 28.428349], [112.664869, 28.430607], [112.660848, 28.432629], [112.660115, 28.433693], [112.659311, 28.436114], [112.659335, 28.438932], [112.659666, 28.441311], [112.661676, 28.447386], [112.663592, 28.451422], [112.664443, 28.452518], [112.665271, 28.454857], [112.667092, 28.458673], [112.670143, 28.462003], [112.673525, 28.464179], [112.682394, 28.467751], [112.68438, 28.468872], [112.684404, 28.470487], [112.682796, 28.472062], [112.679319, 28.474807], [112.676954, 28.477104], [112.67064, 28.48148], [112.659122, 28.484037], [112.655787, 28.48575], [112.657135, 28.486943], [112.657868, 28.488445], [112.65846, 28.491221], [112.659689, 28.49446], [112.663757, 28.502123], [112.670285, 28.51338], [112.672579, 28.517527], [112.673738, 28.518915], [112.678018, 28.521187], [112.680786, 28.524685], [112.682346, 28.52522], [112.685397, 28.525423], [112.688235, 28.524238], [112.695922, 28.521787], [112.700463, 28.519702], [112.707629, 28.514232], [112.711011, 28.51213], [112.714558, 28.510653], [112.719761, 28.510556], [112.722103, 28.509922], [112.724515, 28.508429], [112.726265, 28.508299], [112.726005, 28.507033], [112.728299, 28.506002], [112.732036, 28.505767], [112.736482, 28.506522], [112.741614, 28.506903], [112.743601, 28.50804], [112.744097, 28.509695], [112.746912, 28.510466], [112.745516, 28.514297], [112.745564, 28.516001], [112.746179, 28.516675], [112.753865, 28.51799], [112.754787, 28.524206], [112.75772, 28.52974], [112.766707, 28.538544], [112.772691, 28.546414], [112.776829, 28.549075], [112.787945, 28.554073], [112.796435, 28.558535], [112.806085, 28.559881], [112.808, 28.559897], [112.808781, 28.559062], [112.808024, 28.557585], [112.805588, 28.554746], [112.803034, 28.551322], [112.799747, 28.548012], [112.796932, 28.544824], [112.790996, 28.539307], [112.789695, 28.537457], [112.78882, 28.535014], [112.789151, 28.532329], [112.788986, 28.530057], [112.789411, 28.527971], [112.792037, 28.523029], [112.794898, 28.520465], [112.798942, 28.518874], [112.802916, 28.518631], [112.808592, 28.519312], [112.811312, 28.520359], [112.812447, 28.521439], [112.81441, 28.525748], [112.815592, 28.527801], [112.818903, 28.528563], [112.821268, 28.528588], [112.823137, 28.527987], [112.823964, 28.526981], [112.824367, 28.522859], [112.822474, 28.517592], [112.822309, 28.515612], [112.822545, 28.512796], [112.824154, 28.511172], [112.826282, 28.510969], [112.82957, 28.511732], [112.832313, 28.512041], [112.836286, 28.510783], [112.83981, 28.509971], [112.845368, 28.510653], [112.852605, 28.512528], [112.855443, 28.511789], [112.860906, 28.508096], [112.863673, 28.507723], [112.864761, 28.506611], [112.864998, 28.503673], [112.867197, 28.502115], [112.870083, 28.501076], [112.8724, 28.500645], [112.873535, 28.501668], [112.873938, 28.503989], [112.872921, 28.508437], [112.871123, 28.512998], [112.870485, 28.516999], [112.871454, 28.51915], [112.873938, 28.520026], [112.876941, 28.519889], [112.879756, 28.520367], [112.88205, 28.520221], [112.885124, 28.520651], [112.887702, 28.522258], [112.889168, 28.5238], [112.891321, 28.524782], [112.893331, 28.523224], [112.894561, 28.52109], [112.896003, 28.519467], [112.898723, 28.517519], [112.902034, 28.516715], [112.904044, 28.516675], [112.910099, 28.517308], [112.912346, 28.517162], [112.915846, 28.518444], [112.917927, 28.519661], [112.921262, 28.520319], [112.923367, 28.519832], [112.926725, 28.518468], [112.928972, 28.517081], [112.932425, 28.514354], [112.93706, 28.509216], [112.939804, 28.508518], [112.945267, 28.511919], [112.947537, 28.514029], [112.950541, 28.515263], [112.955342, 28.515944], [112.957376, 28.517438], [112.961231, 28.519458], [112.965653, 28.521155], [112.972843, 28.520465], [112.974451, 28.520651], [112.978637, 28.523443], [112.978614, 28.521439], [112.979134, 28.515238], [112.978354, 28.512747], [112.976391, 28.509785], [112.974901, 28.507001], [112.974806, 28.504793], [112.975326, 28.503275], [112.977502, 28.499639], [112.977739, 28.497829], [112.976722, 28.495848], [112.974712, 28.493957], [112.970691, 28.491814], [112.969059, 28.489647], [112.96835, 28.485571], [112.967309, 28.483412], [112.966103, 28.482267], [112.963478, 28.480652], [112.961893, 28.480067], [112.960687, 28.478639], [112.960781, 28.477064], [112.962342, 28.475107], [112.964755, 28.472988], [112.969248, 28.468027], [112.970549, 28.466972], [112.974049, 28.465267], [112.977124, 28.464633], [112.979678, 28.465007], [112.982563, 28.464763], [112.984077, 28.46275], [112.986087, 28.460858], [112.988074, 28.460322], [112.991858, 28.460939], [112.9955, 28.4624], [112.998173, 28.463789], [113.00321, 28.465664], [113.009974, 28.467978], [113.016218, 28.470901], [113.019032, 28.473029], [113.021019, 28.476852], [113.022272, 28.478509], [113.024306, 28.480506], [113.027783, 28.483209], [113.032063, 28.485466], [113.033908, 28.486115], [113.036912, 28.48627], [113.041429, 28.484914], [113.04247, 28.48368], [113.044929, 28.482243], [113.043699, 28.48165], [113.043439, 28.48014], [113.045331, 28.47863], [113.047129, 28.477721], [113.047129, 28.476292], [113.044645, 28.473954], [113.042564, 28.473426], [113.04001, 28.471234], [113.038709, 28.470633], [113.036226, 28.471161], [113.033317, 28.472517], [113.031236, 28.471291], [113.029651, 28.46974], [113.028208, 28.466452], [113.029367, 28.465348], [113.03055, 28.465129], [113.030124, 28.461954], [113.02686, 28.462311], [113.025158, 28.460411], [113.024164, 28.456343], [113.025158, 28.453582], [113.026955, 28.449806], [113.023266, 28.444828], [113.021634, 28.441961], [113.020593, 28.439468], [113.022154, 28.437584], [113.022225, 28.434863], [113.022911, 28.433506], [113.032537, 28.440978], [113.031165, 28.435171], [113.029438, 28.432524], [113.023005, 28.429283], [113.020522, 28.425287], [113.017566, 28.421095], [113.012339, 28.416116], [113.009028, 28.413809], [113.005457, 28.411616], [113.003281, 28.41125], [113.000207, 28.411713], [112.996754, 28.411607], [112.99453, 28.410283], [112.993419, 28.410608], [112.992567, 28.411892], [112.990865, 28.41125], [112.987506, 28.407936], [112.985283, 28.40666], [112.984928, 28.405076], [112.986158, 28.40402], [112.988996, 28.40315], [112.990226, 28.402037], [112.990723, 28.398828], [112.991243, 28.397423], [112.990321, 28.395383], [112.986135, 28.392272], [112.98358, 28.391223], [112.981144, 28.391703], [112.978969, 28.391167], [112.980388, 28.38946], [112.977242, 28.386893], [112.975705, 28.386137], [112.975185, 28.384707], [112.973813, 28.38478], [112.971069, 28.383122], [112.969958, 28.383724], [112.965748, 28.382139], [112.965228, 28.383496], [112.964471, 28.381757], [112.965582, 28.381083], [112.962839, 28.381001], [112.96317, 28.380099], [112.961278, 28.380473], [112.957329, 28.379043], [112.956643, 28.377158], [112.957589, 28.375419], [112.957754, 28.373753], [112.956312, 28.371185], [112.956643, 28.36756], [112.955531, 28.366577], [112.954514, 28.362879], [112.951582, 28.360083], [112.953379, 28.358498], [112.952102, 28.355775], [112.949429, 28.353662], [112.948743, 28.351175], [112.947372, 28.349663], [112.948933, 28.348907], [112.949358, 28.347395], [112.947372, 28.346566], [112.945669, 28.345209], [112.944297, 28.34581], [112.942996, 28.344981], [112.940419, 28.346493], [112.93751, 28.34694], [112.935452, 28.348834], [112.930225, 28.349062], [112.925921, 28.346639], [112.920008, 28.343087], [112.915373, 28.339242], [112.908845, 28.336364], [112.91069, 28.333755], [112.915065, 28.329446], [112.925613, 28.319966], [112.938172, 28.308517], [112.949169, 28.296677], [112.960048, 28.279468], [112.9622, 28.275311], [112.961467, 28.273131], [112.955011, 28.271082], [112.953734, 28.271285], [112.95319, 28.269463], [112.951605, 28.270545], [112.950967, 28.269129], [112.951889, 28.268755], [112.950919, 28.268178], [112.950092, 28.266388], [112.950328, 28.265518], [112.951534, 28.265518], [112.950943, 28.264371], [112.948885, 28.264322], [112.947017, 28.265038], [112.945361, 28.264981], [112.943966, 28.264151], [112.941885, 28.2642], [112.940679, 28.265062], [112.93926, 28.265347], [112.938929, 28.266673], [112.936185, 28.266103], [112.936209, 28.265168], [112.933796, 28.264509], [112.934009, 28.267901], [112.932827, 28.26782], [112.932354, 28.268796], [112.930746, 28.26917], [112.930131, 28.271179], [112.927387, 28.272399], [112.927316, 28.273701], [112.923414, 28.272318], [112.92041, 28.272692], [112.918164, 28.270244], [112.917454, 28.269959], [112.917076, 28.268519], [112.914403, 28.266103], [112.910643, 28.265908], [112.904872, 28.261751], [112.904044, 28.258635], [112.901703, 28.258961], [112.89896, 28.258879], [112.896571, 28.260059], [112.894939, 28.25809], [112.892834, 28.258676], [112.890989, 28.257472], [112.888624, 28.256862], [112.887607, 28.255999], [112.885242, 28.256723], [112.884651, 28.256154], [112.882499, 28.25652], [112.8816, 28.257293], [112.879164, 28.256374], [112.87836, 28.25674], [112.877603, 28.255723], [112.876539, 28.255641], [112.875262, 28.254323], [112.874198, 28.255641], [112.873086, 28.25582], [112.871478, 28.255186], [112.870083, 28.255983], [112.868734, 28.255796], [112.86812, 28.256675], [112.862798, 28.253746], [112.861143, 28.253429], [112.861876, 28.252257], [112.861048, 28.251045], [112.859535, 28.251582], [112.858447, 28.251126], [112.85821, 28.252338], [112.856578, 28.251354], [112.856602, 28.253469], [112.855561, 28.253697], [112.854355, 28.253046], [112.852912, 28.253111], [112.850429, 28.254429], [112.850382, 28.250801], [112.849436, 28.2498], [112.849601, 28.249003], [112.846432, 28.247701], [112.845534, 28.249287], [112.843831, 28.248872], [112.841206, 28.249645], [112.840733, 28.248018], [112.8378, 28.246448], [112.834512, 28.247384], [112.832881, 28.24731], [112.82983, 28.245423], [112.826069, 28.245911], [112.826329, 28.247196], [112.82536, 28.248335], [112.822451, 28.24849], [112.822356, 28.250247], [112.820772, 28.250614], [112.818998, 28.252688], [112.817721, 28.25325], [112.816822, 28.252192], [112.81467, 28.252298], [112.814173, 28.251411], [112.812376, 28.25028], [112.811312, 28.250963], [112.810318, 28.250793], [112.807646, 28.251183], [112.806392, 28.250711], [112.806581, 28.249767], [112.805825, 28.247205], [112.804571, 28.247099], [112.805186, 28.246041], [112.803507, 28.246594], [112.802514, 28.247628], [112.800503, 28.245781], [112.799581, 28.245707], [112.798777, 28.243795], [112.799699, 28.243096], [112.800716, 28.241094], [112.803223, 28.240215], [112.803885, 28.239068], [112.802868, 28.238922], [112.803625, 28.2381], [112.805375, 28.238564], [112.805943, 28.236977], [112.805943, 28.234601], [112.806723, 28.234235], [112.807433, 28.232778], [112.808544, 28.232314], [112.809065, 28.230402], [112.810626, 28.231566], [112.812329, 28.230166], [112.812778, 28.232095], [112.813889, 28.230508], [112.814528, 28.22722], [112.8159, 28.22543], [112.816846, 28.224803], [112.817413, 28.225715], [112.818028, 28.224958], [112.819542, 28.225772], [112.82037, 28.227529], [112.821694, 28.228758], [112.821765, 28.230158], [112.823633, 28.23006], [112.824981, 28.228986], [112.825927, 28.229491], [112.827181, 28.228303], [112.827536, 28.225552], [112.828458, 28.225975], [112.82886, 28.224901], [112.829546, 28.22626], [112.831509, 28.227131], [112.832195, 28.226122], [112.831745, 28.224087], [112.832999, 28.223347], [112.833141, 28.222158], [112.836428, 28.220596], [112.83709, 28.219082], [112.838344, 28.219261], [112.839314, 28.218569], [112.840543, 28.216055], [112.841347, 28.216112], [112.841631, 28.213914], [112.843121, 28.211212], [112.844044, 28.211668], [112.845723, 28.211513], [112.848703, 28.212262], [112.849672, 28.211806], [112.847946, 28.210935], [112.849247, 28.20982], [112.849341, 28.210691], [112.850358, 28.209926], [112.852818, 28.206662], [112.854048, 28.205995], [112.854852, 28.203195], [112.854781, 28.202137], [112.853267, 28.201665], [112.857595, 28.200623], [112.857761, 28.199361], [112.859913, 28.198181], [112.859605, 28.196602], [112.858328, 28.196423], [112.855963, 28.194143], [112.856176, 28.193386], [112.858021, 28.192817], [112.859062, 28.193028], [112.85918, 28.192116], [112.860362, 28.192173], [112.861545, 28.190961], [112.861805, 28.189202], [112.861332, 28.188185], [112.863224, 28.186101], [112.861994, 28.186198], [112.859866, 28.185441], [112.851848, 28.178033], [112.844753, 28.175851], [112.844256, 28.174564], [112.846763, 28.173441], [112.845841, 28.17248], [112.846669, 28.171226], [112.845794, 28.170274], [112.848608, 28.169557], [112.849956, 28.169989], [112.85102, 28.169345], [112.851399, 28.168132], [112.854024, 28.168751], [112.855703, 28.168751], [112.856838, 28.167603], [112.85698, 28.165462], [112.858045, 28.165006], [112.855609, 28.164273], [112.856696, 28.162628], [112.85296, 28.159289], [112.846219, 28.155747], [112.845061, 28.151342], [112.84279, 28.150226], [112.841679, 28.15157], [112.840662, 28.150055], [112.839172, 28.151325], [112.83884, 28.153044], [112.836357, 28.153728], [112.834276, 28.153345], [112.834938, 28.154314], [112.833117, 28.15736], [112.832455, 28.157604], [112.832006, 28.155902], [112.83035, 28.154827], [112.82886, 28.155674], [112.827961, 28.157286], [112.827867, 28.159249], [112.82614, 28.158589], [112.825904, 28.157571], [112.823728, 28.155617], [112.822782, 28.1535], [112.820062, 28.153825], [112.81888, 28.154941], [112.816373, 28.155356], [112.814835, 28.154729], [112.814291, 28.153825], [112.814764, 28.151154], [112.814008, 28.149697], [112.813062, 28.149395], [112.810578, 28.146455], [112.808663, 28.146911], [112.807859, 28.144623], [112.808592, 28.142408], [112.806085, 28.142253], [112.803578, 28.140852], [112.800811, 28.140176], [112.797689, 28.138148], [112.797098, 28.139109], [112.794141, 28.140079], [112.793243, 28.142253], [112.7918, 28.143841], [112.790381, 28.144314], [112.788796, 28.145983], [112.789246, 28.148964], [112.78882, 28.150104], [112.788678, 28.152677], [112.787046, 28.155438], [112.78409, 28.157612], [112.781465, 28.158312], [112.78111, 28.160299], [112.779431, 28.161854], [112.777042, 28.162001], [112.777137, 28.163743], [112.775339, 28.164313], [112.772927, 28.164199], [112.772194, 28.163817], [112.773566, 28.162416], [112.772454, 28.161667], [112.770397, 28.162498], [112.768599, 28.161439], [112.766612, 28.161056], [112.764768, 28.162538], [112.7642, 28.161667], [112.76342, 28.163483], [112.761859, 28.164256], [112.762474, 28.166447], [112.761551, 28.167473], [112.759092, 28.167416], [112.758004, 28.166276], [112.757318, 28.164427], [112.755118, 28.163361], [112.75202, 28.163173], [112.746628, 28.165201], [112.746226, 28.165885], [112.744381, 28.1663], [112.743837, 28.167171], [112.741638, 28.168417], [112.7423, 28.17016], [112.740786, 28.171674], [112.741732, 28.172049], [112.743837, 28.170876], [112.744901, 28.171747], [112.742986, 28.17296], [112.74204, 28.172846], [112.739746, 28.175533], [112.738516, 28.175753], [112.737357, 28.174849], [112.735938, 28.175004], [112.735631, 28.176062], [112.734401, 28.177153], [112.730617, 28.177764], [112.727235, 28.175232], [112.724822, 28.174735], [112.722765, 28.172545], [112.71917, 28.171487], [112.717278, 28.1702], [112.715906, 28.168197], [112.714653, 28.167399], [112.712595, 28.16744], [112.711696, 28.169223], [112.709804, 28.171943], [112.707487, 28.172285], [112.707581, 28.172969], [112.705926, 28.175639], [112.706068, 28.178529], [112.705003, 28.180117], [112.701953, 28.182014], [112.6998, 28.183072], [112.695047, 28.18409], [112.691404, 28.183487], [112.688164, 28.183219], [112.687739, 28.184228], [112.686367, 28.185238], [112.682205, 28.182242], [112.682157, 28.183308], [112.68088, 28.184668], [112.678728, 28.185506], [112.677853, 28.187037], [112.67641, 28.18711], [112.676623, 28.188421], [112.671775, 28.190081], [112.672248, 28.193134], [112.671538, 28.194062], [112.671467, 28.19582], [112.670829, 28.196651], [112.67071, 28.198165], [112.66747, 28.198563], [112.667447, 28.200232], [112.666643, 28.200419], [112.668393, 28.202462], [112.669528, 28.204676]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430121,\r\n          name: '长沙县',\r\n          center: [113.080098, 28.237888],\r\n          centroid: [113.235421, 28.35718],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 6,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[113.107177, 28.18238], [113.107839, 28.18374], [113.108998, 28.184464], [113.108785, 28.18571], [113.10914, 28.187851], [113.108761, 28.189438], [113.107603, 28.189479], [113.106869, 28.192857], [113.107295, 28.194054], [113.10668, 28.196651], [113.108076, 28.197261], [113.109778, 28.197318], [113.110985, 28.201079], [113.109707, 28.202755], [113.107934, 28.202804], [113.108147, 28.19985], [113.106325, 28.199776], [113.105876, 28.204619], [113.106704, 28.205441], [113.105379, 28.205401], [113.10545, 28.207932], [113.104528, 28.208005], [113.103227, 28.206646], [113.103487, 28.205246], [113.102329, 28.206052], [113.101359, 28.207509], [113.098639, 28.207379], [113.097953, 28.207688], [113.09696, 28.210008], [113.094855, 28.210333], [113.094808, 28.211196], [113.092608, 28.211513], [113.092632, 28.212978], [113.091473, 28.213011], [113.091166, 28.214573], [113.089841, 28.214907], [113.088801, 28.214199], [113.088115, 28.215216], [113.086767, 28.215216], [113.087902, 28.212246], [113.087665, 28.211228], [113.08575, 28.210056], [113.084614, 28.210081], [113.084851, 28.213003], [113.08381, 28.212645], [113.081327, 28.213076], [113.081232, 28.21529], [113.072671, 28.215477], [113.072624, 28.217577], [113.069147, 28.217853], [113.065008, 28.21721], [113.06515, 28.218464], [113.062856, 28.217341], [113.060089, 28.217113], [113.05841, 28.219294], [113.057086, 28.223094], [113.055808, 28.223802], [113.056258, 28.224885], [113.057724, 28.224014], [113.059947, 28.226113], [113.058552, 28.228514], [113.055359, 28.229198], [113.055572, 28.230727], [113.056802, 28.231387], [113.058268, 28.2329], [113.058008, 28.233624], [113.059025, 28.238319], [113.059048, 28.240354], [113.058292, 28.246057], [113.057511, 28.246887], [113.056565, 28.246562], [113.053396, 28.247847], [113.052994, 28.248913], [113.053704, 28.25242], [113.052545, 28.253429], [113.053018, 28.25434], [113.051599, 28.254031], [113.052379, 28.255056], [113.05044, 28.255812], [113.048713, 28.255886], [113.047815, 28.255316], [113.047081, 28.253811], [113.045804, 28.253469], [113.045, 28.25434], [113.042162, 28.25377], [113.040223, 28.252102], [113.04001, 28.251199], [113.038591, 28.251655], [113.037527, 28.252599], [113.038686, 28.25373], [113.038023, 28.254901], [113.037787, 28.257399], [113.037125, 28.258001], [113.035682, 28.257472], [113.03554, 28.259628], [113.033695, 28.261214], [113.029935, 28.262988], [113.03003, 28.265819], [113.03107, 28.269064], [113.035777, 28.276751], [113.03826, 28.282095], [113.041193, 28.286219], [113.04299, 28.287723], [113.046206, 28.289439], [113.050534, 28.289927], [113.052947, 28.290773], [113.054295, 28.291611], [113.055619, 28.29362], [113.056825, 28.294067], [113.059309, 28.293798], [113.060704, 28.294343], [113.063164, 28.296929], [113.063329, 28.297946], [113.062218, 28.299337], [113.060964, 28.300052], [113.057629, 28.302785], [113.059072, 28.303793], [113.06068, 28.303598], [113.06139, 28.304818], [113.06139, 28.306111], [113.060302, 28.310201], [113.060893, 28.311193], [113.064015, 28.312038], [113.062856, 28.314079], [113.059924, 28.316112], [113.059261, 28.320112], [113.06016, 28.321617], [113.062643, 28.321982], [113.066711, 28.323942], [113.069691, 28.325942], [113.070779, 28.327852], [113.071134, 28.330901], [113.072151, 28.333153], [113.073333, 28.333909], [113.075131, 28.333942], [113.075888, 28.334852], [113.075982, 28.336429], [113.077023, 28.337811], [113.077567, 28.339982], [113.076313, 28.342095], [113.076857, 28.344038], [113.079884, 28.343705], [113.081705, 28.345022], [113.082178, 28.346501], [113.081705, 28.34872], [113.080003, 28.350004], [113.079695, 28.350752], [113.083668, 28.351403], [113.081753, 28.353735], [113.080074, 28.35658], [113.07629, 28.358352], [113.073759, 28.357824], [113.073026, 28.353215], [113.070708, 28.35189], [113.071087, 28.349818], [113.069171, 28.351142], [113.067965, 28.35076], [113.066546, 28.352118], [113.064866, 28.351589], [113.063282, 28.349663], [113.061177, 28.351443], [113.062525, 28.356613], [113.060586, 28.357295], [113.058741, 28.356466], [113.05595, 28.35658], [113.055737, 28.360847], [113.052639, 28.361489], [113.049092, 28.363261], [113.045639, 28.362554], [113.044527, 28.367918], [113.039419, 28.371014], [113.037101, 28.373086], [113.03729, 28.37498], [113.035658, 28.378109], [113.029769, 28.379433], [113.02686, 28.375126], [113.024141, 28.373468], [113.02381, 28.375394], [113.021563, 28.376524], [113.0196, 28.379051], [113.019127, 28.377735], [113.017282, 28.380945], [113.016336, 28.380676], [113.016975, 28.379206], [113.015697, 28.378263], [113.013593, 28.377881], [113.012434, 28.378832], [113.011322, 28.377962], [113.010376, 28.378336], [113.007987, 28.376946], [113.000443, 28.377588], [113.000727, 28.379449], [112.999213, 28.378466], [112.99751, 28.380205], [112.995831, 28.380051], [112.993892, 28.37771], [112.992567, 28.378848], [112.990983, 28.377751], [112.989398, 28.378092], [112.988996, 28.378726], [112.99025, 28.378954], [112.989895, 28.380124], [112.991409, 28.381481], [112.991196, 28.382464], [112.989398, 28.382017], [112.990794, 28.384162], [112.989895, 28.384731], [112.987885, 28.383407], [112.98682, 28.383943], [112.98429, 28.388282], [112.981878, 28.388583], [112.980388, 28.38946], [112.978969, 28.391167], [112.981144, 28.391703], [112.98358, 28.391223], [112.986135, 28.392272], [112.990321, 28.395383], [112.991243, 28.397423], [112.990723, 28.398828], [112.990226, 28.402037], [112.988996, 28.40315], [112.986158, 28.40402], [112.984928, 28.405076], [112.985283, 28.40666], [112.987506, 28.407936], [112.990865, 28.41125], [112.992567, 28.411892], [112.993419, 28.410608], [112.99453, 28.410283], [112.996754, 28.411607], [113.000207, 28.411713], [113.003281, 28.41125], [113.005457, 28.411616], [113.009028, 28.413809], [113.012339, 28.416116], [113.017566, 28.421095], [113.020522, 28.425287], [113.023005, 28.429283], [113.029438, 28.432524], [113.031165, 28.435171], [113.032537, 28.440978], [113.022911, 28.433506], [113.022225, 28.434863], [113.022154, 28.437584], [113.020593, 28.439468], [113.021634, 28.441961], [113.023266, 28.444828], [113.026955, 28.449806], [113.025158, 28.453582], [113.024164, 28.456343], [113.025158, 28.460411], [113.02686, 28.462311], [113.030124, 28.461954], [113.03055, 28.465129], [113.029367, 28.465348], [113.028208, 28.466452], [113.029651, 28.46974], [113.031236, 28.471291], [113.033317, 28.472517], [113.036226, 28.471161], [113.038709, 28.470633], [113.04001, 28.471234], [113.042564, 28.473426], [113.044645, 28.473954], [113.047129, 28.476292], [113.047129, 28.477721], [113.045331, 28.47863], [113.043439, 28.48014], [113.043699, 28.48165], [113.044929, 28.482243], [113.04247, 28.48368], [113.041429, 28.484914], [113.044669, 28.487098], [113.047815, 28.489565], [113.049943, 28.492301], [113.052237, 28.493316], [113.053987, 28.495012], [113.056281, 28.498446], [113.058079, 28.4989], [113.058575, 28.501043], [113.060941, 28.502261], [113.062312, 28.503405], [113.063708, 28.50528], [113.064748, 28.508397], [113.063779, 28.508218], [113.064464, 28.509801], [113.064204, 28.511229], [113.066782, 28.514743], [113.067255, 28.517405], [113.067941, 28.51928], [113.069526, 28.519637], [113.06936, 28.518168], [113.071205, 28.518249], [113.074729, 28.522169], [113.077874, 28.522778], [113.078536, 28.520319], [113.0783, 28.519191], [113.07953, 28.517267], [113.084307, 28.515173], [113.085182, 28.512073], [113.084993, 28.508234], [113.087169, 28.508664], [113.088848, 28.508064], [113.089557, 28.505686], [113.091804, 28.506278], [113.093838, 28.507366], [113.096582, 28.508129], [113.096558, 28.508697], [113.101666, 28.505978], [113.102896, 28.504468], [113.103346, 28.503178], [113.105356, 28.501895], [113.111931, 28.499306], [113.114603, 28.498876], [113.117701, 28.500264], [113.121225, 28.500353], [113.126097, 28.499826], [113.129928, 28.498957], [113.131182, 28.496936], [113.132743, 28.495369], [113.13402, 28.492577], [113.133334, 28.48907], [113.133807, 28.487374], [113.132057, 28.487033], [113.131939, 28.485677], [113.132885, 28.483753], [113.132648, 28.482089], [113.134469, 28.480473], [113.133736, 28.4779], [113.134422, 28.476617], [113.132104, 28.475115], [113.131891, 28.472468], [113.131182, 28.471315], [113.133145, 28.468287], [113.13499, 28.469115], [113.137165, 28.470771], [113.140429, 28.472135], [113.142392, 28.472647], [113.143622, 28.472485], [113.147974, 28.471169], [113.151498, 28.470633], [113.154288, 28.470877], [113.156511, 28.471965], [113.159988, 28.474766], [113.161029, 28.476114], [113.167532, 28.478768], [113.169897, 28.480465], [113.170985, 28.482462], [113.171175, 28.484329], [113.170631, 28.48894], [113.171387, 28.492415], [113.175503, 28.493592], [113.176567, 28.495629], [113.177064, 28.498389], [113.177655, 28.499363], [113.178601, 28.499257], [113.179547, 28.500442], [113.182385, 28.501417], [113.185436, 28.503373], [113.185696, 28.505783], [113.183071, 28.510158], [113.183969, 28.515238], [113.184324, 28.519483], [113.185341, 28.525001], [113.185932, 28.529237], [113.186666, 28.530827], [113.188605, 28.53387], [113.192365, 28.538098], [113.194754, 28.541538], [113.193855, 28.544191], [113.193335, 28.548621], [113.194021, 28.548434], [113.195818, 28.549189], [113.196599, 28.550617], [113.198538, 28.552994], [113.20114, 28.554762], [113.2014, 28.557553], [113.199768, 28.560189], [113.199933, 28.564408], [113.197616, 28.565917], [113.196575, 28.562907], [113.194872, 28.563962], [113.191561, 28.567506], [113.189031, 28.567198], [113.186122, 28.567961], [113.18475, 28.569688], [113.18449, 28.572146], [113.183473, 28.573979], [113.184324, 28.575642], [113.182787, 28.57956], [113.183023, 28.581668], [113.18527, 28.584158], [113.187091, 28.587427], [113.187162, 28.592601], [113.185341, 28.595309], [113.184395, 28.597499], [113.18326, 28.598034], [113.183425, 28.599105], [113.185199, 28.60131], [113.186524, 28.602], [113.195038, 28.603678], [113.195818, 28.604513], [113.197355, 28.607611], [113.199082, 28.609054], [113.201518, 28.609143], [113.204025, 28.610351], [113.208377, 28.615103], [113.21112, 28.616611], [113.213603, 28.618354], [113.215448, 28.620827], [113.215235, 28.62454], [113.214289, 28.62724], [113.212988, 28.632663], [113.212846, 28.634276], [113.213651, 28.635962], [113.214644, 28.636838], [113.21786, 28.638792], [113.221479, 28.640202], [113.225972, 28.642269], [113.23198, 28.644304], [113.23373, 28.645211], [113.234699, 28.646452], [113.234865, 28.651177], [113.23347, 28.657191], [113.233611, 28.661616], [113.238247, 28.660878], [113.243592, 28.656186], [113.245105, 28.650099], [113.246217, 28.648048], [113.248109, 28.645503], [113.247778, 28.644085], [113.246099, 28.641977], [113.245957, 28.640607], [113.247518, 28.638127], [113.251018, 28.63409], [113.251822, 28.629696], [113.256339, 28.627937], [113.25887, 28.627621], [113.260951, 28.628131], [113.26237, 28.628926], [113.263411, 28.630474], [113.265729, 28.631455], [113.272516, 28.631415], [113.275614, 28.632517], [113.276489, 28.633522], [113.277223, 28.635411], [113.278594, 28.637584], [113.283608, 28.63871], [113.287132, 28.638175], [113.289119, 28.637584], [113.292974, 28.63593], [113.297231, 28.634714], [113.304515, 28.634114], [113.310002, 28.633166], [113.315252, 28.630442], [113.316577, 28.628342], [113.315678, 28.624451], [113.315631, 28.621021], [113.316198, 28.619473], [113.318043, 28.616895], [113.320337, 28.615784], [113.323483, 28.615411], [113.325185, 28.615857], [113.33221, 28.618986], [113.33422, 28.61923], [113.340487, 28.618865], [113.343302, 28.618346], [113.347275, 28.61687], [113.349238, 28.616595], [113.352974, 28.617754], [113.355529, 28.619943], [113.358982, 28.623397], [113.359809, 28.625472], [113.360093, 28.631463], [113.361347, 28.633271], [113.363972, 28.635136], [113.365438, 28.637227], [113.369624, 28.640032], [113.371635, 28.640956], [113.375821, 28.643347], [113.381142, 28.644895], [113.384761, 28.644563], [113.397413, 28.63931], [113.400701, 28.636214], [113.403326, 28.634503], [113.406992, 28.633133], [113.409712, 28.63246], [113.411816, 28.632258], [113.413898, 28.632501], [113.41709, 28.633279], [113.421229, 28.634601], [113.424517, 28.636052], [113.425321, 28.635962], [113.426503, 28.634738], [113.426456, 28.632031], [113.425321, 28.628221], [113.424398, 28.622813], [113.423003, 28.619927], [113.419314, 28.62004], [113.418344, 28.619578], [113.417705, 28.617032], [113.417753, 28.615257], [113.418817, 28.612605], [113.42078, 28.609541], [113.420709, 28.608665], [113.418368, 28.606873], [113.416925, 28.604667], [113.415198, 28.595958], [113.414584, 28.590906], [113.414915, 28.588303], [113.415671, 28.587654], [113.418651, 28.588959], [113.419858, 28.588619], [113.420993, 28.587119], [113.422175, 28.583623], [113.424327, 28.578724], [113.425486, 28.578659], [113.426219, 28.580484], [113.426787, 28.585772], [113.430406, 28.59029], [113.433669, 28.590492], [113.441994, 28.590371], [113.442917, 28.591028], [113.445187, 28.593817], [113.446511, 28.593955], [113.449468, 28.590979], [113.452921, 28.59063], [113.454363, 28.591044], [113.456918, 28.593866], [113.459046, 28.59681], [113.460512, 28.597458], [113.462736, 28.596518], [113.46704, 28.592276], [113.469807, 28.590111], [113.472385, 28.587224], [113.473686, 28.585359], [113.47475, 28.582747], [113.474348, 28.580719], [113.474584, 28.579178], [113.475861, 28.577881], [113.478794, 28.576218], [113.486007, 28.573152], [113.491352, 28.570451], [113.49516, 28.56788], [113.497218, 28.565844], [113.499654, 28.561958], [113.500931, 28.559175], [113.501569, 28.555014], [113.501782, 28.551761], [113.502515, 28.548118], [113.503793, 28.543299], [113.505424, 28.539331], [113.507364, 28.536954], [113.50682, 28.532921], [113.506867, 28.529026], [113.505732, 28.522834], [113.504384, 28.520879], [113.50209, 28.519483], [113.500552, 28.517916], [113.500032, 28.516569], [113.497904, 28.514167], [113.495349, 28.513169], [113.490596, 28.514005], [113.48797, 28.513291], [113.48395, 28.511692], [113.480568, 28.510758], [113.476098, 28.510125], [113.474513, 28.509687], [113.475507, 28.50545], [113.475554, 28.502967], [113.474513, 28.501279], [113.472479, 28.500451], [113.470233, 28.500248], [113.468151, 28.500767], [113.465479, 28.500905], [113.462404, 28.499071], [113.461364, 28.497553], [113.459827, 28.49683], [113.452424, 28.495313], [113.447457, 28.494614], [113.440623, 28.493933], [113.43821, 28.494679], [113.436933, 28.495929], [113.43568, 28.49972], [113.434095, 28.4986], [113.431091, 28.488916], [113.430311, 28.487065], [113.429034, 28.48549], [113.425061, 28.483599], [113.421868, 28.482998], [113.420425, 28.479735], [113.418368, 28.477616], [113.413046, 28.47626], [113.410823, 28.47505], [113.410374, 28.474149], [113.411887, 28.470983], [113.412124, 28.467881], [113.412928, 28.46426], [113.412928, 28.462685], [113.412195, 28.459526], [113.411178, 28.457959], [113.408151, 28.457472], [113.406188, 28.454532], [113.402593, 28.454954], [113.397508, 28.45424], [113.397981, 28.453225], [113.395971, 28.452843], [113.395616, 28.451186], [113.39441, 28.4513], [113.392541, 28.450504], [113.393298, 28.449449], [113.392281, 28.448092], [113.390649, 28.44888], [113.390295, 28.451787], [113.388781, 28.451917], [113.384146, 28.44979], [113.383058, 28.449075], [113.382656, 28.447865], [113.383602, 28.44473], [113.380385, 28.44322], [113.37776, 28.443943], [113.376483, 28.443675], [113.37381, 28.445413], [113.372628, 28.444544], [113.369482, 28.444016], [113.368111, 28.440491], [113.368158, 28.437218], [113.367496, 28.4344], [113.366668, 28.432824], [113.365438, 28.431533], [113.362884, 28.430688], [113.360826, 28.430534], [113.357303, 28.429754], [113.356333, 28.427334], [113.356002, 28.424288], [113.35437, 28.422371], [113.34964, 28.422387], [113.347227, 28.422736], [113.344839, 28.42155], [113.341953, 28.418634], [113.337909, 28.416839], [113.333983, 28.413801], [113.329868, 28.409812], [113.32878, 28.407497], [113.328189, 28.40445], [113.328307, 28.402874], [113.329442, 28.400559], [113.330956, 28.396326], [113.335308, 28.384804], [113.338382, 28.373395], [113.336467, 28.369527], [113.338974, 28.365821], [113.339092, 28.363749], [113.338713, 28.360839], [113.336916, 28.358799], [113.333983, 28.357816], [113.332706, 28.352597], [113.333014, 28.350395], [113.334575, 28.343786], [113.335331, 28.341478], [113.336159, 28.340234], [113.336467, 28.338543], [113.336372, 28.336112], [113.332564, 28.329861], [113.332068, 28.328454], [113.33098, 28.32169], [113.330909, 28.315876], [113.330696, 28.314185], [113.329655, 28.312551], [113.325304, 28.309575], [113.325043, 28.307656], [113.327456, 28.304606], [113.327692, 28.303142], [113.327314, 28.30128], [113.324996, 28.298914], [113.321591, 28.296214], [113.317688, 28.293522], [113.315583, 28.293636], [113.312887, 28.296124], [113.311374, 28.295848], [113.310522, 28.294669], [113.31012, 28.291904], [113.30889, 28.288919], [113.307093, 28.287121], [113.305106, 28.285942], [113.30364, 28.284592], [113.302481, 28.281664], [113.301157, 28.276954], [113.30014, 28.275824], [113.29943, 28.273652], [113.299761, 28.270862], [113.299052, 28.263394], [113.298342, 28.260181], [113.295812, 28.254665], [113.293518, 28.253486], [113.288977, 28.252143], [113.287747, 28.250622], [113.289142, 28.247294], [113.289071, 28.245488], [113.284909, 28.242119], [113.284199, 28.240427], [113.282662, 28.238531], [113.283916, 28.235634], [113.283135, 28.231574], [113.278523, 28.231199], [113.272445, 28.23002], [113.270033, 28.22818], [113.268401, 28.227334], [113.26587, 28.228246], [113.264853, 28.227529], [113.263766, 28.22499], [113.267077, 28.224803], [113.267029, 28.222948], [113.270033, 28.218976], [113.272918, 28.213955], [113.277199, 28.21013], [113.279044, 28.206491], [113.280203, 28.205132], [113.280817, 28.200843], [113.280179, 28.198588], [113.27876, 28.197522], [113.27824, 28.195714], [113.278878, 28.193688], [113.282095, 28.18803], [113.282851, 28.187175], [113.285524, 28.187004], [113.286541, 28.18593], [113.286801, 28.184187], [113.288929, 28.180679], [113.292193, 28.173986], [113.295457, 28.173905], [113.297775, 28.175818], [113.299336, 28.177658], [113.301819, 28.178212], [113.305414, 28.179954], [113.307968, 28.181468], [113.312107, 28.181794], [113.315844, 28.18378], [113.317854, 28.184], [113.321023, 28.18501], [113.322347, 28.18584], [113.324334, 28.186442], [113.332848, 28.191099], [113.336112, 28.193346], [113.337838, 28.193679], [113.340203, 28.192711], [113.3407, 28.191359], [113.339257, 28.187191], [113.340156, 28.185889], [113.341551, 28.184871], [113.343231, 28.184806], [113.345596, 28.186947], [113.346494, 28.189251], [113.348623, 28.190431], [113.354228, 28.1907], [113.356286, 28.19114], [113.35813, 28.192776], [113.359502, 28.19626], [113.36085, 28.197049], [113.362553, 28.196708], [113.364279, 28.194892], [113.368111, 28.193639], [113.369743, 28.19245], [113.370263, 28.191148], [113.37005, 28.187151], [113.369317, 28.185343], [113.366195, 28.183154], [113.358911, 28.181094], [113.356569, 28.176982], [113.356309, 28.175175], [113.354701, 28.169655], [113.35366, 28.167456], [113.352478, 28.164077], [113.352099, 28.162278], [113.354464, 28.162099], [113.356759, 28.162319], [113.360874, 28.157506], [113.363735, 28.154851], [113.365013, 28.153206], [113.365178, 28.15157], [113.36286, 28.149045], [113.360306, 28.147074], [113.359478, 28.145894], [113.359005, 28.142742], [113.36156, 28.142278], [113.362766, 28.143572], [113.365344, 28.145592], [113.370736, 28.149127], [113.373219, 28.151024], [113.377429, 28.152612], [113.387646, 28.15556], [113.391075, 28.15639], [113.395545, 28.15806], [113.397674, 28.158516], [113.400677, 28.158662], [113.40335, 28.158516], [113.408245, 28.156472], [113.40737, 28.152759], [113.407725, 28.150185], [113.408505, 28.148679], [113.412455, 28.147083], [113.416405, 28.143906], [113.419408, 28.143678], [113.421111, 28.144061], [113.428916, 28.144362], [113.431588, 28.144061], [113.43322, 28.142017], [113.430855, 28.138678], [113.42428, 28.132887], [113.422246, 28.131991], [113.413519, 28.123121], [113.408482, 28.121573], [113.404367, 28.119504], [113.403089, 28.118315], [113.40264, 28.116954], [113.400985, 28.114991], [113.399329, 28.113761], [113.38994, 28.111211], [113.385967, 28.108067], [113.383791, 28.10695], [113.38003, 28.104091], [113.378091, 28.101272], [113.376294, 28.099194], [113.374071, 28.097964], [113.372155, 28.097516], [113.367992, 28.095503], [113.366455, 28.093646], [113.365533, 28.08914], [113.365202, 28.085864], [113.363144, 28.084129], [113.361347, 28.083623], [113.358154, 28.081211], [113.356806, 28.078506], [113.355079, 28.075972], [113.350207, 28.071481], [113.346045, 28.068841], [113.341883, 28.066648], [113.33843, 28.064407], [113.334977, 28.062777], [113.332304, 28.062223], [113.328544, 28.06404], [113.327196, 28.063307], [113.325564, 28.057561], [113.324145, 28.056151], [113.320668, 28.055825], [113.312509, 28.057316], [113.308914, 28.05642], [113.305839, 28.052931], [113.304941, 28.051415], [113.305272, 28.049492], [113.306029, 28.048253], [113.306289, 28.045815], [113.309316, 28.0439], [113.312674, 28.041479], [113.31686, 28.040867], [113.317759, 28.038291], [113.319604, 28.037949], [113.320881, 28.036367], [113.318634, 28.03406], [113.315678, 28.033563], [113.313597, 28.031761], [113.308039, 28.030872], [113.306927, 28.032633], [113.301795, 28.032642], [113.300589, 28.033604], [113.299525, 28.036286], [113.301582, 28.039017], [113.302268, 28.040818], [113.302103, 28.043264], [113.301488, 28.044315], [113.300211, 28.044984], [113.297089, 28.045033], [113.284956, 28.046793], [113.28174, 28.047625], [113.278121, 28.049068], [113.273699, 28.05122], [113.269229, 28.054064], [113.256268, 28.060063], [113.253099, 28.062117], [113.24896, 28.066722], [113.244845, 28.071929], [113.24248, 28.074545], [113.240115, 28.075719], [113.239027, 28.075352], [113.23723, 28.072475], [113.234959, 28.070324], [113.233564, 28.068132], [113.232902, 28.065499], [113.233304, 28.062818], [113.235953, 28.060161], [113.226871, 28.056012], [113.225665, 28.059273], [113.223702, 28.060846], [113.220344, 28.060984], [113.2176, 28.060789], [113.211167, 28.058164], [113.208022, 28.055523], [113.204498, 28.050193], [113.20367, 28.049418], [113.201423, 28.049214], [113.200643, 28.050054], [113.197828, 28.056102], [113.195818, 28.057732], [113.194517, 28.058042], [113.190923, 28.058164], [113.187895, 28.057854], [113.183544, 28.056721], [113.17432, 28.056281], [113.173634, 28.057642], [113.175361, 28.062345], [113.173634, 28.068857], [113.168502, 28.074912], [113.165735, 28.078547], [113.161289, 28.082336], [113.155447, 28.089604], [113.152183, 28.08945], [113.137071, 28.091878], [113.126263, 28.088847], [113.117347, 28.089148], [113.103606, 28.098388], [113.089534, 28.11368], [113.086577, 28.123015], [113.084922, 28.126192], [113.079743, 28.131519], [113.077236, 28.134386], [113.075367, 28.137619], [113.0748, 28.140673], [113.0748, 28.144802], [113.073759, 28.147449], [113.073239, 28.150324], [113.07435, 28.15275], [113.07629, 28.15385], [113.077496, 28.157425], [113.080097, 28.161374], [113.083408, 28.164655], [113.089794, 28.16937], [113.092845, 28.170884], [113.095446, 28.171275], [113.098781, 28.171226], [113.102258, 28.169956], [113.106255, 28.168034], [113.108832, 28.167163], [113.112262, 28.167497], [113.113468, 28.168059], [113.114911, 28.169443], [113.115171, 28.171788], [113.114863, 28.172724], [113.11115, 28.179311], [113.109684, 28.181045], [113.107177, 28.18238]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430124,\r\n          name: '宁乡市',\r\n          center: [112.553182, 28.253928],\r\n          centroid: [112.35331, 28.125424],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 7,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[112.655787, 28.48575], [112.659122, 28.484037], [112.67064, 28.48148], [112.676954, 28.477104], [112.679319, 28.474807], [112.682796, 28.472062], [112.684404, 28.470487], [112.68438, 28.468872], [112.682394, 28.467751], [112.673525, 28.464179], [112.670143, 28.462003], [112.667092, 28.458673], [112.665271, 28.454857], [112.664443, 28.452518], [112.663592, 28.451422], [112.661676, 28.447386], [112.659666, 28.441311], [112.659335, 28.438932], [112.659311, 28.436114], [112.660115, 28.433693], [112.660848, 28.432629], [112.664869, 28.430607], [112.672508, 28.428349], [112.675937, 28.426651], [112.677995, 28.425888], [112.679958, 28.424166], [112.682015, 28.420584], [112.680833, 28.418025], [112.678893, 28.415572], [112.678184, 28.412623], [112.678137, 28.410649], [112.679508, 28.405588], [112.681684, 28.402062], [112.683694, 28.400396], [112.686533, 28.398975], [112.690269, 28.398178], [112.700226, 28.397309], [112.702213, 28.395871], [112.702828, 28.393905], [112.701409, 28.390728], [112.700155, 28.389013], [112.696631, 28.385909], [112.696466, 28.383878], [112.698027, 28.382716], [112.704294, 28.383147], [112.705642, 28.383106], [112.70926, 28.381635], [112.71321, 28.381806], [112.718224, 28.382968], [112.721346, 28.382854], [112.722363, 28.382269], [112.723829, 28.3755], [112.723711, 28.37437], [112.721771, 28.371859], [112.716805, 28.369852], [112.71373, 28.36752], [112.710372, 28.365845], [112.707392, 28.364903], [112.70453, 28.364358], [112.702662, 28.36348], [112.701621, 28.361619], [112.701125, 28.359051], [112.702567, 28.353426], [112.703632, 28.35124], [112.70472, 28.350582], [112.707581, 28.347859], [112.708953, 28.346176], [112.711484, 28.343843], [112.715362, 28.338364], [112.718248, 28.334681], [112.719619, 28.333234], [112.721701, 28.33021], [112.721204, 28.329137], [112.719738, 28.329226], [112.716308, 28.328617], [112.716261, 28.32743], [112.717231, 28.323438], [112.716545, 28.322129], [112.714818, 28.321031], [112.709119, 28.318356], [112.708385, 28.316372], [112.709, 28.314738], [112.711082, 28.312965], [112.71198, 28.31151], [112.711886, 28.309924], [112.710632, 28.308664], [112.707439, 28.308111], [112.706966, 28.305509], [112.709095, 28.300573], [112.711531, 28.29632], [112.713376, 28.294815], [112.715622, 28.293668], [112.718721, 28.291285], [112.719194, 28.290497], [112.719667, 28.285592], [112.718792, 28.283665], [112.714085, 28.281957], [112.709946, 28.280997], [112.70997, 28.279362], [112.710963, 28.278809], [112.712099, 28.27911], [112.715126, 28.280785], [112.716285, 28.280916], [112.717325, 28.2802], [112.715244, 28.278077], [112.709923, 28.275913], [112.702402, 28.274116], [112.700392, 28.272163], [112.699777, 28.26956], [112.700013, 28.264891], [112.70103, 28.262996], [112.700557, 28.25892], [112.700936, 28.256504], [112.702993, 28.254071], [112.704199, 28.250345], [112.702213, 28.244617], [112.700652, 28.243454], [112.700037, 28.24168], [112.697695, 28.238995], [112.698263, 28.236293], [112.700368, 28.232713], [112.704152, 28.228929], [112.706541, 28.225967], [112.70621, 28.224502], [112.704767, 28.222167], [112.69954, 28.217682], [112.692067, 28.213792], [112.69157, 28.213108], [112.689607, 28.208396], [112.686958, 28.205531], [112.685326, 28.204318], [112.68185, 28.203089], [112.680171, 28.203285], [112.674968, 28.205637], [112.670829, 28.205433], [112.669528, 28.204676], [112.668038, 28.203846], [112.666051, 28.204245], [112.664017, 28.203602], [112.662196, 28.202332], [112.659855, 28.199931], [112.658956, 28.198433], [112.655905, 28.197351], [112.654486, 28.195495], [112.65399, 28.196545], [112.650135, 28.1949], [112.647486, 28.194046], [112.646091, 28.193183], [112.645215, 28.191547], [112.64233, 28.1914], [112.639397, 28.191555], [112.639752, 28.183886], [112.638901, 28.180898], [112.637884, 28.179124], [112.639279, 28.177438], [112.637529, 28.177927], [112.636039, 28.176144], [112.631451, 28.17432], [112.630671, 28.173563], [112.630387, 28.171698], [112.629322, 28.170656], [112.630718, 28.168946], [112.632633, 28.167326], [112.632492, 28.166512], [112.63365, 28.164094], [112.633698, 28.161667], [112.63559, 28.158532], [112.634313, 28.155234], [112.6319, 28.153141], [112.630552, 28.152343], [112.630529, 28.150886], [112.632208, 28.148166], [112.630931, 28.145951], [112.631309, 28.145038], [112.630245, 28.144208], [112.630812, 28.140746], [112.626886, 28.134654], [112.626059, 28.133742], [112.623694, 28.13248], [112.61972, 28.131869], [112.618065, 28.129604], [112.61272, 28.128163], [112.611396, 28.127104], [112.613831, 28.12532], [112.615818, 28.121858], [112.616575, 28.121084], [112.614754, 28.120343], [112.614423, 28.118526], [112.615156, 28.11592], [112.61544, 28.11306], [112.616977, 28.11293], [112.623907, 28.111073], [112.629914, 28.112629], [112.635968, 28.113557], [112.641928, 28.113158], [112.642519, 28.113761], [112.646114, 28.114934], [112.646776, 28.114364], [112.649638, 28.114519], [112.653682, 28.112702], [112.65205, 28.109671], [112.65205, 28.108539], [112.653659, 28.106902], [112.654794, 28.107064], [112.656828, 28.10528], [112.657608, 28.106429], [112.658838, 28.106429], [112.65995, 28.10528], [112.662859, 28.103912], [112.665058, 28.10247], [112.66721, 28.10225], [112.668251, 28.100677], [112.672768, 28.097157], [112.676883, 28.09776], [112.678089, 28.096017], [112.678752, 28.094069], [112.683245, 28.093312], [112.685776, 28.093727], [112.688188, 28.092285], [112.689536, 28.088724], [112.688874, 28.087266], [112.689347, 28.086378], [112.690553, 28.086125], [112.695922, 28.083648], [112.701314, 28.082531], [112.703513, 28.082589], [112.709426, 28.07981], [112.711673, 28.080054], [112.713683, 28.07981], [112.715575, 28.078913], [112.717349, 28.080087], [112.719809, 28.079182], [112.722528, 28.079916], [112.723332, 28.079068], [112.724278, 28.079142], [112.726241, 28.080731], [112.728394, 28.080502], [112.729836, 28.079614], [112.733029, 28.079777], [112.735512, 28.078922], [112.738043, 28.080307], [112.742371, 28.081757], [112.744003, 28.081782], [112.744381, 28.082613], [112.746486, 28.082499], [112.747787, 28.084618], [112.748922, 28.085131], [112.750554, 28.086761], [112.751949, 28.086924], [112.755024, 28.089775], [112.756987, 28.089409], [112.758973, 28.090435], [112.759967, 28.089409], [112.760014, 28.087763], [112.761717, 28.087747], [112.762284, 28.086076], [112.765028, 28.084585], [112.765998, 28.081708], [112.767795, 28.082132], [112.768575, 28.081643], [112.769924, 28.082442], [112.77191, 28.080779], [112.773518, 28.080054], [112.775268, 28.079989], [112.776404, 28.079199], [112.77709, 28.076175], [112.779384, 28.072492], [112.778556, 28.071824], [112.779053, 28.068955], [112.778816, 28.067594], [112.777444, 28.065377], [112.777042, 28.063225], [112.777137, 28.061139], [112.783522, 28.051138], [112.782387, 28.048448], [112.780401, 28.046614], [112.779478, 28.047005], [112.77541, 28.050453], [112.773329, 28.050209], [112.772667, 28.049182], [112.773518, 28.046826], [112.774275, 28.043671], [112.773376, 28.043867], [112.773305, 28.041748], [112.771768, 28.041862], [112.770964, 28.043003], [112.769238, 28.043337], [112.765856, 28.041601], [112.766352, 28.04059], [112.765335, 28.038813], [112.765572, 28.038201], [112.767156, 28.0379], [112.767984, 28.036856], [112.769167, 28.036595], [112.770751, 28.034704], [112.771626, 28.033701], [112.772407, 28.031036], [112.778201, 28.026723], [112.780235, 28.024684], [112.780401, 28.022948], [112.779455, 28.021497], [112.77541, 28.01936], [112.773235, 28.019116], [112.770089, 28.017395], [112.769001, 28.01212], [112.768694, 28.006412], [112.767038, 28.004023], [112.764437, 28.003085], [112.76368, 28.002343], [112.765619, 27.996667], [112.765879, 27.9917], [112.764484, 27.986815], [112.761338, 27.982459], [112.760416, 27.980698], [112.760203, 27.977076], [112.758524, 27.973544], [112.758311, 27.972353], [112.759683, 27.970461], [112.759588, 27.969327], [112.758406, 27.965411], [112.755402, 27.961178], [112.753723, 27.959334], [112.750554, 27.954529], [112.745445, 27.948328], [112.744097, 27.946435], [112.743695, 27.944616], [112.744216, 27.941466], [112.744263, 27.939435], [112.743412, 27.935975], [112.74308, 27.93196], [112.741756, 27.929781], [112.740857, 27.929096], [112.738445, 27.928239], [112.734093, 27.92806], [112.731847, 27.929153], [112.730995, 27.928606], [112.730404, 27.926289], [112.728867, 27.924754], [112.728677, 27.922755], [112.729884, 27.921441], [112.732414, 27.920437], [112.732438, 27.91825], [112.730995, 27.916961], [112.723593, 27.915704], [112.721488, 27.915492], [112.715788, 27.915696], [112.71243, 27.916479], [112.706044, 27.923098], [112.70453, 27.923212], [112.702118, 27.922168], [112.699185, 27.922078], [112.69358, 27.921449], [112.685326, 27.920242], [112.683434, 27.920307], [112.682252, 27.921188], [112.682725, 27.922045], [112.686249, 27.924216], [112.687739, 27.925546], [112.687124, 27.927056], [112.683009, 27.928264], [112.679272, 27.929814], [112.672981, 27.934237], [112.67142, 27.934767], [112.666808, 27.935567], [112.664088, 27.937533], [112.661676, 27.941091], [112.660659, 27.941687], [112.657277, 27.941948], [112.654605, 27.941499], [112.652594, 27.94043], [112.651719, 27.939345], [112.650679, 27.935926], [112.648219, 27.932597], [112.645783, 27.930344], [112.644506, 27.928451], [112.641455, 27.922404], [112.641384, 27.920894], [112.642046, 27.919654], [112.645854, 27.916814], [112.648077, 27.916912], [112.650111, 27.918952], [112.651223, 27.918528], [112.651838, 27.916724], [112.651601, 27.915908], [112.651956, 27.912137], [112.652642, 27.908424], [112.653469, 27.905959], [112.654959, 27.902947], [112.657064, 27.900343], [112.656307, 27.897445], [112.65328, 27.894442], [112.652736, 27.893013], [112.652381, 27.885331], [112.651932, 27.883405], [112.649946, 27.88076], [112.648314, 27.880049], [112.643796, 27.879657], [112.640982, 27.879821], [112.637813, 27.87969], [112.633863, 27.880115], [112.63313, 27.880996], [112.632019, 27.884588], [112.631687, 27.887576], [112.630552, 27.890458], [112.629181, 27.892482], [112.625775, 27.896474], [112.621825, 27.898809], [112.619697, 27.89978], [112.617521, 27.900237], [112.613311, 27.90009], [112.610449, 27.900645], [112.609574, 27.901812], [112.609551, 27.903053], [112.610568, 27.905396], [112.612531, 27.907355], [112.611396, 27.909134], [112.60825, 27.910309], [112.60773, 27.911036], [112.60728, 27.913672], [112.606949, 27.918014], [112.606547, 27.918854], [112.605341, 27.919279], [112.603331, 27.917997], [112.602054, 27.918022], [112.599925, 27.919899], [112.598979, 27.921172], [112.598601, 27.923253], [112.598766, 27.926705], [112.598364, 27.927423], [112.594746, 27.931528], [112.594344, 27.932817], [112.594154, 27.936709], [112.594627, 27.938586], [112.598435, 27.945546], [112.599287, 27.948956], [112.598672, 27.951143], [112.596945, 27.953476], [112.588171, 27.958029], [112.585806, 27.958722], [112.581289, 27.958167], [112.577339, 27.958991], [112.575565, 27.960647], [112.57514, 27.962393], [112.575542, 27.963927], [112.575494, 27.966007], [112.574288, 27.96785], [112.570055, 27.969343], [112.567737, 27.970648], [112.566744, 27.971587], [112.565869, 27.975583], [112.564757, 27.97883], [112.563314, 27.98095], [112.561351, 27.980461], [112.559081, 27.975216], [112.558348, 27.974303], [112.553902, 27.972631], [112.550472, 27.972729], [112.545317, 27.975119], [112.541249, 27.975037], [112.539475, 27.975396], [112.537914, 27.976717], [112.536329, 27.978887], [112.535123, 27.98321], [112.53439, 27.986529], [112.534154, 27.990762], [112.533373, 27.993119], [112.531126, 27.994147], [112.5272, 27.994122], [112.522045, 27.994538], [112.51968, 27.994938], [112.517338, 27.994612], [112.514642, 27.993429], [112.51249, 27.993959], [112.511804, 27.994677], [112.511828, 27.99665], [112.511402, 27.997955], [112.509439, 28.001266], [112.508398, 28.006118], [112.508091, 28.008891], [112.508304, 28.010937], [112.509037, 28.013327], [112.511236, 28.016971], [112.515659, 28.017632], [112.516416, 28.01883], [112.511071, 28.02285], [112.507098, 28.025174], [112.506033, 28.025524], [112.503337, 28.027285], [112.501469, 28.02934], [112.498986, 28.030938], [112.496597, 28.033326], [112.491796, 28.036922], [112.488485, 28.038748], [112.486285, 28.040223], [112.48541, 28.041886], [112.484039, 28.045717], [112.483164, 28.048986], [112.480255, 28.056249], [112.478954, 28.058417], [112.47718, 28.059737], [112.475454, 28.060185], [112.473136, 28.060169], [112.470818, 28.059705], [112.46869, 28.058889], [112.465686, 28.056126], [112.459158, 28.051912], [112.457337, 28.051725], [112.455587, 28.052581], [112.452087, 28.055768], [112.449296, 28.05673], [112.445299, 28.05739], [112.443999, 28.057333], [112.440286, 28.055067], [112.438748, 28.054374], [112.436809, 28.054129], [112.432552, 28.054105], [112.430754, 28.05329], [112.42567, 28.05148], [112.423659, 28.05038], [112.422903, 28.049337], [112.42269, 28.044641], [112.421933, 28.043949], [112.41945, 28.045872], [112.418291, 28.045758], [112.416683, 28.04465], [112.413301, 28.040672], [112.41129, 28.034639], [112.410344, 28.033025], [112.410108, 28.031598], [112.41226, 28.028394], [112.412496, 28.025019], [112.411882, 28.021521], [112.412213, 28.0206], [112.415051, 28.015235], [112.414861, 28.014199], [112.412828, 28.01212], [112.410652, 28.008556], [112.409966, 28.006714], [112.41006, 28.004822], [112.409564, 28.002987], [112.408523, 28.001723], [112.407128, 28.001136], [112.402185, 28.002416], [112.399985, 28.002685], [112.398566, 28.002383], [112.397928, 28.000834], [112.398141, 27.996862], [112.399087, 27.995982], [112.401806, 27.995745], [112.407601, 27.996275], [112.409209, 27.995672], [112.410723, 27.992728], [112.41174, 27.991423], [112.415382, 27.992132], [112.415878, 27.991088], [112.414791, 27.986415], [112.411834, 27.97896], [112.41155, 27.97458], [112.412544, 27.972467], [112.412686, 27.971113], [112.411598, 27.968128], [112.41129, 27.96325], [112.410226, 27.962042], [112.409824, 27.962834], [112.409753, 27.968226], [112.408878, 27.969311], [112.406442, 27.969767], [112.406111, 27.968405], [112.407412, 27.963511], [112.406111, 27.963086], [112.404124, 27.965697], [112.40235, 27.966358], [112.400813, 27.96573], [112.398921, 27.963804], [112.397005, 27.962997], [112.390525, 27.961838], [112.389792, 27.962132], [112.389012, 27.964367], [112.387735, 27.964669], [112.386008, 27.964106], [112.384731, 27.964261], [112.382744, 27.96794], [112.380237, 27.96825], [112.377494, 27.96763], [112.374963, 27.967655], [112.371108, 27.970053], [112.369335, 27.969931], [112.36503, 27.96896], [112.356729, 27.966301], [112.354033, 27.965672], [112.353134, 27.964816], [112.353016, 27.961806], [112.352614, 27.961161], [112.347742, 27.958151], [112.344407, 27.957311], [112.342633, 27.95718], [112.339086, 27.957857], [112.337383, 27.95873], [112.334427, 27.962344], [112.332346, 27.963723], [112.328207, 27.963976], [112.325936, 27.96356], [112.323737, 27.962711], [112.318108, 27.959236], [112.315577, 27.958396], [112.313331, 27.95913], [112.310847, 27.961667], [112.309216, 27.967516], [112.307394, 27.97104], [112.306661, 27.971635], [112.305053, 27.971799], [112.298478, 27.971252], [112.294671, 27.970387], [112.289089, 27.968193], [112.27497, 27.964204], [112.266219, 27.961235], [112.263476, 27.959962], [112.26052, 27.959293], [112.257682, 27.959146], [112.256854, 27.959505], [112.255316, 27.961406], [112.253803, 27.961789], [112.250988, 27.9613], [112.248742, 27.96192], [112.246306, 27.963503], [112.245289, 27.963698], [112.234268, 27.962409], [112.23143, 27.961749], [112.230365, 27.96183], [112.22871, 27.963511], [112.227929, 27.967426], [112.226581, 27.969213], [112.223814, 27.971374], [112.222419, 27.97135], [112.220787, 27.970387], [112.220409, 27.967908], [112.221709, 27.965167], [112.221402, 27.963527], [112.219746, 27.962703], [112.217169, 27.958804], [112.21452, 27.955132], [112.213408, 27.954162], [112.211114, 27.953729], [112.210215, 27.954006], [112.207898, 27.956519], [112.207164, 27.957776], [112.205107, 27.959211], [112.202789, 27.959008], [112.200755, 27.959897], [112.200471, 27.961414], [112.199407, 27.961838], [112.19884, 27.963886], [112.199407, 27.968674], [112.198177, 27.970428], [112.196829, 27.969612], [112.19515, 27.966904], [112.193069, 27.96515], [112.192738, 27.961634], [112.192903, 27.959986], [112.188741, 27.952946], [112.183041, 27.947096], [112.182355, 27.945285], [112.182615, 27.939516], [112.182048, 27.938415], [112.180913, 27.938121], [112.177956, 27.938757], [112.173439, 27.940724], [112.172517, 27.93972], [112.172375, 27.938105], [112.172895, 27.933853], [112.172564, 27.933054], [112.171547, 27.933266], [112.169844, 27.934596], [112.168827, 27.934808], [112.16632, 27.933821], [112.161046, 27.930132], [112.158871, 27.928337], [112.157499, 27.926232], [112.156789, 27.924012], [112.157215, 27.922086], [112.160361, 27.918919], [112.160692, 27.916895], [112.159888, 27.916194], [112.157239, 27.915377], [112.154495, 27.914121], [112.153478, 27.911607], [112.152438, 27.909901], [112.149576, 27.908008], [112.146951, 27.907632], [112.143332, 27.908269], [112.141275, 27.907583], [112.139548, 27.906383], [112.137609, 27.905698], [112.136497, 27.906212], [112.135811, 27.907436], [112.135953, 27.910766], [112.135741, 27.911884], [112.13418, 27.913011], [112.13075, 27.913141], [112.129048, 27.912652], [112.127676, 27.911248], [112.121361, 27.903151], [112.119753, 27.899845], [112.118287, 27.897625], [112.111192, 27.896343], [112.105208, 27.894115], [112.10114, 27.893593], [112.097143, 27.893919], [112.095109, 27.894425], [112.093099, 27.895911], [112.090427, 27.901494], [112.089528, 27.904335], [112.089008, 27.907069], [112.087754, 27.908391], [112.084798, 27.909722], [112.071293, 27.915173], [112.068195, 27.91599], [112.067226, 27.916651], [112.064222, 27.917516], [112.062141, 27.919768], [112.060201, 27.920038], [112.057363, 27.918258], [112.055921, 27.918201], [112.053981, 27.919882], [112.05216, 27.920013], [112.051214, 27.919189], [112.04963, 27.915508], [112.048613, 27.914488], [112.045917, 27.914055], [112.044096, 27.912146], [112.043008, 27.912023], [112.039697, 27.913386], [112.036953, 27.91359], [112.035345, 27.913149], [112.034021, 27.909885], [112.032412, 27.908416], [112.031112, 27.908873], [112.031514, 27.913035], [112.03052, 27.91439], [112.028486, 27.913949], [112.026287, 27.911974], [112.023685, 27.911852], [112.021864, 27.911346], [112.018884, 27.909248], [112.01756, 27.90631], [112.016188, 27.905804], [112.014083, 27.906579], [112.013516, 27.908693], [112.012735, 27.90915], [112.009235, 27.907689], [112.00758, 27.907706], [112.006302, 27.908293], [112.002306, 27.908432], [111.999704, 27.907836], [111.998285, 27.911003], [111.998451, 27.914325], [111.998261, 27.916251], [111.997505, 27.918577], [111.994666, 27.923604], [111.992727, 27.928949], [111.990741, 27.937566], [111.990268, 27.94096], [111.987359, 27.946329], [111.98601, 27.950025], [111.983433, 27.95346], [111.98225, 27.954333], [111.977189, 27.95585], [111.975321, 27.957017], [111.971797, 27.961324], [111.970259, 27.962711], [111.969195, 27.962956], [111.964158, 27.96515], [111.963212, 27.966129], [111.961958, 27.969033], [111.960728, 27.972622], [111.958836, 27.976774], [111.956944, 27.980151], [111.955241, 27.982443], [111.951221, 27.9871], [111.947768, 27.988699], [111.940342, 27.99157], [111.938757, 27.991659], [111.936321, 27.991203], [111.93547, 27.99055], [111.929675, 27.983797], [111.926837, 27.980869], [111.921445, 27.977207], [111.918158, 27.975592], [111.914941, 27.974702], [111.912624, 27.973797], [111.910968, 27.973667], [111.908319, 27.974515], [111.90489, 27.976399], [111.902146, 27.97861], [111.900065, 27.981366], [111.89964, 27.983634], [111.900609, 27.986097], [111.904299, 27.992157], [111.905245, 27.994228], [111.907113, 27.996479], [111.907562, 27.99904], [111.908296, 28.000182], [111.907539, 28.001446], [111.899356, 28.005352], [111.896399, 28.008687], [111.896612, 28.011329], [111.89919, 28.016286], [111.89971, 28.020021], [111.90094, 28.021064], [111.904961, 28.023641], [111.907823, 28.025084], [111.91085, 28.026315], [111.913097, 28.02797], [111.91338, 28.030057], [111.912056, 28.033082], [111.909218, 28.035365], [111.908106, 28.037443], [111.907539, 28.041829], [111.908012, 28.044128], [111.910046, 28.047364], [111.911063, 28.052312], [111.91234, 28.053869], [111.916502, 28.057186], [111.917448, 28.058286], [111.918063, 28.060128], [111.919269, 28.061921], [111.920665, 28.063022], [111.924733, 28.064619], [111.92627, 28.065499], [111.926885, 28.066999], [111.926175, 28.067504], [111.922864, 28.068262], [111.921232, 28.068939], [111.91707, 28.074448], [111.917023, 28.077715], [111.91409, 28.079345], [111.913877, 28.080087], [111.915533, 28.081717], [111.915249, 28.0828], [111.909998, 28.087901], [111.905623, 28.091405], [111.902194, 28.093491], [111.899403, 28.098274], [111.899498, 28.100416], [111.902643, 28.102518], [111.902903, 28.103708], [111.907066, 28.112718], [111.90884, 28.116058], [111.913168, 28.119757], [111.916053, 28.121215], [111.921942, 28.125076], [111.926364, 28.12822], [111.928162, 28.129735], [111.931875, 28.133335], [111.932939, 28.13564], [111.933223, 28.137538], [111.933341, 28.143483], [111.93126, 28.147099], [111.930929, 28.148475], [111.931118, 28.150405], [111.932679, 28.153109], [111.934074, 28.15876], [111.933601, 28.163629], [111.933128, 28.166145], [111.933223, 28.168148], [111.935399, 28.170469], [111.938639, 28.17051], [111.941784, 28.172268], [111.942943, 28.173832], [111.944906, 28.178977], [111.944126, 28.180752], [111.941666, 28.182421], [111.939254, 28.184529], [111.939112, 28.186801], [111.940342, 28.187216], [111.944764, 28.186744], [111.947508, 28.188909], [111.949873, 28.191921], [111.951859, 28.193036], [111.955241, 28.192165], [111.957181, 28.193565], [111.958884, 28.195942], [111.96113, 28.198148], [111.960917, 28.203765], [111.961863, 28.206052], [111.962147, 28.20886], [111.964039, 28.210081], [111.966192, 28.210984], [111.969242, 28.211603], [111.972388, 28.213019], [111.972317, 28.213939], [111.973902, 28.21494], [111.974611, 28.216152], [111.974989, 28.218797], [111.976006, 28.219676], [111.981777, 28.221524], [111.985112, 28.223697], [111.986602, 28.224177], [111.991143, 28.224291], [111.996227, 28.223957], [112.000248, 28.224128], [112.003488, 28.224518], [112.007059, 28.225943], [112.007934, 28.226927], [112.007792, 28.2291], [112.005735, 28.231313], [112.003985, 28.235016], [112.004292, 28.237083], [112.005546, 28.23945], [112.008691, 28.243226], [112.009661, 28.24404], [112.014178, 28.245528], [112.015786, 28.246529], [112.017607, 28.247066], [112.023118, 28.247424], [112.026594, 28.250394], [112.028534, 28.251167], [112.032673, 28.25185], [112.034943, 28.251712], [112.038514, 28.252159], [112.041376, 28.251452], [112.043079, 28.251639], [112.046248, 28.253054], [112.047856, 28.252737], [112.051711, 28.251289], [112.053059, 28.251655], [112.056678, 28.254787], [112.060107, 28.254144], [112.061739, 28.25342], [112.062921, 28.253608], [112.065357, 28.255121], [112.07101, 28.255763], [112.075054, 28.257415], [112.078791, 28.259522], [112.080659, 28.260799], [112.081723, 28.262475], [112.081156, 28.266941], [112.082244, 28.267868], [112.090332, 28.26481], [112.093454, 28.265013], [112.094802, 28.265941], [112.096812, 28.268828], [112.099083, 28.270057], [112.100643, 28.269959], [112.103694, 28.268788], [112.108992, 28.270154], [112.112918, 28.271684], [112.116276, 28.271708], [112.117908, 28.270748], [112.120675, 28.267795], [112.123159, 28.266152], [112.125878, 28.265835], [112.131294, 28.26651], [112.134865, 28.266713], [112.137325, 28.266616], [112.139075, 28.265949], [112.141038, 28.26459], [112.14267, 28.262996], [112.143521, 28.261165], [112.144349, 28.257504], [112.145011, 28.255902], [112.146194, 28.254535], [112.149836, 28.253136], [112.155962, 28.249857], [112.159533, 28.248506], [112.162063, 28.247262], [112.169513, 28.245602], [112.171027, 28.244642], [112.173203, 28.240468], [112.175946, 28.237221], [112.17798, 28.23574], [112.1807, 28.234739], [112.187251, 28.234039], [112.190467, 28.234463], [112.193897, 28.233283], [112.195529, 28.233234], [112.199052, 28.234869], [112.200968, 28.236098], [112.204303, 28.238783], [112.205604, 28.239239], [112.210097, 28.239247], [112.213361, 28.238352], [112.217263, 28.236326], [112.21802, 28.236326], [112.22327, 28.233942], [112.224618, 28.232029], [112.226203, 28.227782], [112.2267, 28.227188], [112.227267, 28.221263], [112.228521, 28.218846], [112.229443, 28.217747], [112.231382, 28.216388], [112.234079, 28.215664], [112.235994, 28.213939], [112.237106, 28.211025], [112.237957, 28.210455], [112.239826, 28.211277], [112.241694, 28.212954], [112.242427, 28.214565], [112.242545, 28.216283], [112.245856, 28.219872], [112.249711, 28.222541], [112.251698, 28.224388], [112.252455, 28.226577], [112.252478, 28.228221], [112.254087, 28.231818], [112.255742, 28.23347], [112.257421, 28.234088], [112.260661, 28.234739], [112.262553, 28.236049], [112.264422, 28.235683], [112.266006, 28.236757], [112.267449, 28.239044], [112.268561, 28.239833], [112.269294, 28.241607], [112.272085, 28.2429], [112.273787, 28.244373], [112.276152, 28.247335], [112.278565, 28.247432], [112.280646, 28.248449], [112.279558, 28.249776], [112.2797, 28.251264], [112.280693, 28.252631], [112.284264, 28.255007], [112.286275, 28.25486], [112.288285, 28.254079], [112.290295, 28.252249], [112.292258, 28.24858], [112.294127, 28.247091], [112.295735, 28.248018], [112.299803, 28.252534], [112.301624, 28.253664], [112.301671, 28.256675], [112.302664, 28.258741], [112.305526, 28.261173], [112.308648, 28.261784], [112.316429, 28.262321], [112.32026, 28.261849], [112.32246, 28.263248], [112.322885, 28.265086], [112.322862, 28.267893], [112.321727, 28.270805], [112.319149, 28.274677], [112.317659, 28.280907], [112.316642, 28.282965], [112.31676, 28.283998], [112.317919, 28.284868], [112.320189, 28.285007], [112.322081, 28.284738], [112.324044, 28.283958], [112.326835, 28.284104], [112.329862, 28.284763], [112.332937, 28.284389], [112.335278, 28.283095], [112.337501, 28.281282], [112.339985, 28.279761], [112.34112, 28.278337], [112.343721, 28.276873], [112.346772, 28.274807], [112.350249, 28.274465], [112.353631, 28.275442], [112.356918, 28.277386], [112.358692, 28.280452], [112.359307, 28.282697], [112.358645, 28.283494], [112.35285, 28.282005], [112.349137, 28.281843], [112.348239, 28.283827], [112.349019, 28.285007], [112.348499, 28.286032], [112.345613, 28.288813], [112.345282, 28.289496], [112.34708, 28.291294], [112.348759, 28.291651], [112.352803, 28.291237], [112.360679, 28.288447], [112.362878, 28.287487], [112.366024, 28.286772], [112.368507, 28.284673], [112.370328, 28.284405], [112.373095, 28.285527], [112.375365, 28.287089], [112.377991, 28.290033], [112.378747, 28.292221], [112.378842, 28.294059], [112.379954, 28.295384], [112.380923, 28.295401], [112.381893, 28.294433], [112.383099, 28.29048], [112.38492, 28.289586], [112.389627, 28.289374], [112.393765, 28.290277], [112.395066, 28.291481], [112.396154, 28.293758], [112.397242, 28.294295], [112.401523, 28.294457], [112.403013, 28.297068], [112.40481, 28.298686], [112.4063, 28.297954], [112.406915, 28.295718], [112.408476, 28.29436], [112.409777, 28.294539], [112.412851, 28.298344], [112.416706, 28.301183], [112.419473, 28.302524], [112.422311, 28.304606], [112.42269, 28.305582], [112.420443, 28.30964], [112.420088, 28.312559], [112.421176, 28.313543], [112.422855, 28.312811], [112.424511, 28.310583], [112.425693, 28.309729], [112.427112, 28.309859], [112.429312, 28.311136], [112.43215, 28.316136], [112.432978, 28.317917], [112.434397, 28.318787], [112.435319, 28.317706], [112.43565, 28.315876], [112.435295, 28.313925], [112.435366, 28.311973], [112.436099, 28.310892], [112.438346, 28.310632], [112.440948, 28.312242], [112.44187, 28.313152], [112.442982, 28.316299], [112.443762, 28.317153], [112.445938, 28.317202], [112.449249, 28.317876], [112.451259, 28.31786], [112.453128, 28.317226], [112.456557, 28.314697], [112.459064, 28.314055], [112.459655, 28.314689], [112.461334, 28.314925], [112.463676, 28.313616], [112.466017, 28.312884], [112.467436, 28.314063], [112.468453, 28.314104], [112.471599, 28.317608], [112.473798, 28.317267], [112.475879, 28.314315], [112.477464, 28.313063], [112.480609, 28.312364], [112.481603, 28.311518], [112.485245, 28.309412], [112.486924, 28.309249], [112.490637, 28.311559], [112.493026, 28.312543], [112.497283, 28.313014], [112.500972, 28.311884], [112.501871, 28.312177], [112.503101, 28.313502], [112.503337, 28.315445], [112.503172, 28.318031], [112.501327, 28.322324], [112.499293, 28.325357], [112.499601, 28.327186], [112.500783, 28.327422], [112.50232, 28.326454], [112.504047, 28.323478], [112.5053, 28.32073], [112.508067, 28.321023], [112.510267, 28.322064], [112.516156, 28.324275], [112.519183, 28.324812], [112.522423, 28.324966], [112.525971, 28.325966], [112.528809, 28.327747], [112.530417, 28.329397], [112.534579, 28.331982], [112.536992, 28.332519], [112.538718, 28.331917], [112.539688, 28.331088], [112.539972, 28.329397], [112.538671, 28.327966], [112.535785, 28.325454], [112.535998, 28.324381], [112.537465, 28.323722], [112.541816, 28.323202], [112.543992, 28.322665], [112.547209, 28.320673], [112.551253, 28.319194], [112.553925, 28.318942], [112.556432, 28.320332], [112.5605, 28.325405], [112.562889, 28.326844], [112.566082, 28.327096], [112.568872, 28.326194], [112.570599, 28.324999], [112.572349, 28.325324], [112.572514, 28.326454], [112.571119, 28.329088], [112.569251, 28.330649], [112.565396, 28.332178], [112.564426, 28.333129], [112.564142, 28.334877], [112.564237, 28.33725], [112.562534, 28.342754], [112.562487, 28.344737], [112.564048, 28.34594], [112.570835, 28.348956], [112.573413, 28.351191], [112.575187, 28.354597], [112.575565, 28.361213], [112.575352, 28.363635], [112.575447, 28.369056], [112.57618, 28.369966], [112.579846, 28.37216], [112.580343, 28.3729], [112.580485, 28.374988], [112.57968, 28.381245], [112.579609, 28.384414], [112.580272, 28.38673], [112.581998, 28.391215], [112.582424, 28.393019], [112.5824, 28.398861], [112.584269, 28.402419], [112.58635, 28.403053], [112.59056, 28.40393], [112.592996, 28.40549], [112.594367, 28.407594], [112.594769, 28.414613], [112.595384, 28.415799], [112.597371, 28.417635], [112.599145, 28.418707], [112.603733, 28.420348], [112.610402, 28.423549], [112.612129, 28.424539], [112.612862, 28.426716], [112.618112, 28.435342], [112.623504, 28.444544], [112.624285, 28.44607], [112.627005, 28.463773], [112.627312, 28.468263], [112.631073, 28.467914], [112.635755, 28.467865], [112.637742, 28.468319], [112.639847, 28.469326], [112.643915, 28.473296], [112.650962, 28.481407], [112.655787, 28.48575]]]],\r\n        },\r\n      },\r\n      {\r\n        type: 'Feature',\r\n        properties: {\r\n          adcode: 430181,\r\n          name: '浏阳市',\r\n          center: [113.633301, 28.141112],\r\n          centroid: [113.715565, 28.228403],\r\n          childrenNum: 0,\r\n          level: 'district',\r\n          subFeatureIndex: 8,\r\n          acroutes: [100000, 430000, 430100],\r\n          parent: {adcode: 430100},\r\n        },\r\n        geometry: {\r\n          type: 'MultiPolygon',\r\n          // tslint:disable-next-line:max-line-length\r\n          coordinates: [[[[113.177229, 28.014933], [113.181037, 28.019018], [113.184608, 28.025092], [113.185388, 28.029087], [113.185341, 28.031508], [113.184537, 28.037557], [113.18423, 28.040998], [113.18527, 28.047307], [113.18676, 28.051138], [113.186382, 28.053396], [113.184915, 28.054643], [113.183544, 28.056721], [113.187895, 28.057854], [113.190923, 28.058164], [113.194517, 28.058042], [113.195818, 28.057732], [113.197828, 28.056102], [113.200643, 28.050054], [113.201423, 28.049214], [113.20367, 28.049418], [113.204498, 28.050193], [113.208022, 28.055523], [113.211167, 28.058164], [113.2176, 28.060789], [113.220344, 28.060984], [113.223702, 28.060846], [113.225665, 28.059273], [113.226871, 28.056012], [113.235953, 28.060161], [113.233304, 28.062818], [113.232902, 28.065499], [113.233564, 28.068132], [113.234959, 28.070324], [113.23723, 28.072475], [113.239027, 28.075352], [113.240115, 28.075719], [113.24248, 28.074545], [113.244845, 28.071929], [113.24896, 28.066722], [113.253099, 28.062117], [113.256268, 28.060063], [113.269229, 28.054064], [113.273699, 28.05122], [113.278121, 28.049068], [113.28174, 28.047625], [113.284956, 28.046793], [113.297089, 28.045033], [113.300211, 28.044984], [113.301488, 28.044315], [113.302103, 28.043264], [113.302268, 28.040818], [113.301582, 28.039017], [113.299525, 28.036286], [113.300589, 28.033604], [113.301795, 28.032642], [113.306927, 28.032633], [113.308039, 28.030872], [113.313597, 28.031761], [113.315678, 28.033563], [113.318634, 28.03406], [113.320881, 28.036367], [113.319604, 28.037949], [113.317759, 28.038291], [113.31686, 28.040867], [113.312674, 28.041479], [113.309316, 28.0439], [113.306289, 28.045815], [113.306029, 28.048253], [113.305272, 28.049492], [113.304941, 28.051415], [113.305839, 28.052931], [113.308914, 28.05642], [113.312509, 28.057316], [113.320668, 28.055825], [113.324145, 28.056151], [113.325564, 28.057561], [113.327196, 28.063307], [113.328544, 28.06404], [113.332304, 28.062223], [113.334977, 28.062777], [113.33843, 28.064407], [113.341883, 28.066648], [113.346045, 28.068841], [113.350207, 28.071481], [113.355079, 28.075972], [113.356806, 28.078506], [113.358154, 28.081211], [113.361347, 28.083623], [113.363144, 28.084129], [113.365202, 28.085864], [113.365533, 28.08914], [113.366455, 28.093646], [113.367992, 28.095503], [113.372155, 28.097516], [113.374071, 28.097964], [113.376294, 28.099194], [113.378091, 28.101272], [113.38003, 28.104091], [113.383791, 28.10695], [113.385967, 28.108067], [113.38994, 28.111211], [113.399329, 28.113761], [113.400985, 28.114991], [113.40264, 28.116954], [113.403089, 28.118315], [113.404367, 28.119504], [113.408482, 28.121573], [113.413519, 28.123121], [113.422246, 28.131991], [113.42428, 28.132887], [113.430855, 28.138678], [113.43322, 28.142017], [113.431588, 28.144061], [113.428916, 28.144362], [113.421111, 28.144061], [113.419408, 28.143678], [113.416405, 28.143906], [113.412455, 28.147083], [113.408505, 28.148679], [113.407725, 28.150185], [113.40737, 28.152759], [113.408245, 28.156472], [113.40335, 28.158516], [113.400677, 28.158662], [113.397674, 28.158516], [113.395545, 28.15806], [113.391075, 28.15639], [113.387646, 28.15556], [113.377429, 28.152612], [113.373219, 28.151024], [113.370736, 28.149127], [113.365344, 28.145592], [113.362766, 28.143572], [113.36156, 28.142278], [113.359005, 28.142742], [113.359478, 28.145894], [113.360306, 28.147074], [113.36286, 28.149045], [113.365178, 28.15157], [113.365013, 28.153206], [113.363735, 28.154851], [113.360874, 28.157506], [113.356759, 28.162319], [113.354464, 28.162099], [113.352099, 28.162278], [113.352478, 28.164077], [113.35366, 28.167456], [113.354701, 28.169655], [113.356309, 28.175175], [113.356569, 28.176982], [113.358911, 28.181094], [113.366195, 28.183154], [113.369317, 28.185343], [113.37005, 28.187151], [113.370263, 28.191148], [113.369743, 28.19245], [113.368111, 28.193639], [113.364279, 28.194892], [113.362553, 28.196708], [113.36085, 28.197049], [113.359502, 28.19626], [113.35813, 28.192776], [113.356286, 28.19114], [113.354228, 28.1907], [113.348623, 28.190431], [113.346494, 28.189251], [113.345596, 28.186947], [113.343231, 28.184806], [113.341551, 28.184871], [113.340156, 28.185889], [113.339257, 28.187191], [113.3407, 28.191359], [113.340203, 28.192711], [113.337838, 28.193679], [113.336112, 28.193346], [113.332848, 28.191099], [113.324334, 28.186442], [113.322347, 28.18584], [113.321023, 28.18501], [113.317854, 28.184], [113.315844, 28.18378], [113.312107, 28.181794], [113.307968, 28.181468], [113.305414, 28.179954], [113.301819, 28.178212], [113.299336, 28.177658], [113.297775, 28.175818], [113.295457, 28.173905], [113.292193, 28.173986], [113.288929, 28.180679], [113.286801, 28.184187], [113.286541, 28.18593], [113.285524, 28.187004], [113.282851, 28.187175], [113.282095, 28.18803], [113.278878, 28.193688], [113.27824, 28.195714], [113.27876, 28.197522], [113.280179, 28.198588], [113.280817, 28.200843], [113.280203, 28.205132], [113.279044, 28.206491], [113.277199, 28.21013], [113.272918, 28.213955], [113.270033, 28.218976], [113.267029, 28.222948], [113.267077, 28.224803], [113.263766, 28.22499], [113.264853, 28.227529], [113.26587, 28.228246], [113.268401, 28.227334], [113.270033, 28.22818], [113.272445, 28.23002], [113.278523, 28.231199], [113.283135, 28.231574], [113.283916, 28.235634], [113.282662, 28.238531], [113.284199, 28.240427], [113.284909, 28.242119], [113.289071, 28.245488], [113.289142, 28.247294], [113.287747, 28.250622], [113.288977, 28.252143], [113.293518, 28.253486], [113.295812, 28.254665], [113.298342, 28.260181], [113.299052, 28.263394], [113.299761, 28.270862], [113.29943, 28.273652], [113.30014, 28.275824], [113.301157, 28.276954], [113.302481, 28.281664], [113.30364, 28.284592], [113.305106, 28.285942], [113.307093, 28.287121], [113.30889, 28.288919], [113.31012, 28.291904], [113.310522, 28.294669], [113.311374, 28.295848], [113.312887, 28.296124], [113.315583, 28.293636], [113.317688, 28.293522], [113.321591, 28.296214], [113.324996, 28.298914], [113.327314, 28.30128], [113.327692, 28.303142], [113.327456, 28.304606], [113.325043, 28.307656], [113.325304, 28.309575], [113.329655, 28.312551], [113.330696, 28.314185], [113.330909, 28.315876], [113.33098, 28.32169], [113.332068, 28.328454], [113.332564, 28.329861], [113.336372, 28.336112], [113.336467, 28.338543], [113.336159, 28.340234], [113.335331, 28.341478], [113.334575, 28.343786], [113.333014, 28.350395], [113.332706, 28.352597], [113.333983, 28.357816], [113.336916, 28.358799], [113.338713, 28.360839], [113.339092, 28.363749], [113.338974, 28.365821], [113.336467, 28.369527], [113.338382, 28.373395], [113.335308, 28.384804], [113.330956, 28.396326], [113.329442, 28.400559], [113.328307, 28.402874], [113.328189, 28.40445], [113.32878, 28.407497], [113.329868, 28.409812], [113.333983, 28.413801], [113.337909, 28.416839], [113.341953, 28.418634], [113.344839, 28.42155], [113.347227, 28.422736], [113.34964, 28.422387], [113.35437, 28.422371], [113.356002, 28.424288], [113.356333, 28.427334], [113.357303, 28.429754], [113.360826, 28.430534], [113.362884, 28.430688], [113.365438, 28.431533], [113.366668, 28.432824], [113.367496, 28.4344], [113.368158, 28.437218], [113.368111, 28.440491], [113.369482, 28.444016], [113.372628, 28.444544], [113.37381, 28.445413], [113.376483, 28.443675], [113.37776, 28.443943], [113.380385, 28.44322], [113.383602, 28.44473], [113.382656, 28.447865], [113.383058, 28.449075], [113.384146, 28.44979], [113.388781, 28.451917], [113.390295, 28.451787], [113.390649, 28.44888], [113.392281, 28.448092], [113.393298, 28.449449], [113.392541, 28.450504], [113.39441, 28.4513], [113.395616, 28.451186], [113.395971, 28.452843], [113.397981, 28.453225], [113.397508, 28.45424], [113.402593, 28.454954], [113.406188, 28.454532], [113.408151, 28.457472], [113.411178, 28.457959], [113.412195, 28.459526], [113.412928, 28.462685], [113.412928, 28.46426], [113.412124, 28.467881], [113.411887, 28.470983], [113.410374, 28.474149], [113.410823, 28.47505], [113.413046, 28.47626], [113.418368, 28.477616], [113.420425, 28.479735], [113.421868, 28.482998], [113.425061, 28.483599], [113.429034, 28.48549], [113.430311, 28.487065], [113.431091, 28.488916], [113.434095, 28.4986], [113.43568, 28.49972], [113.436933, 28.495929], [113.43821, 28.494679], [113.440623, 28.493933], [113.447457, 28.494614], [113.452424, 28.495313], [113.459827, 28.49683], [113.461364, 28.497553], [113.462404, 28.499071], [113.465479, 28.500905], [113.468151, 28.500767], [113.470233, 28.500248], [113.472479, 28.500451], [113.474513, 28.501279], [113.475554, 28.502967], [113.475507, 28.50545], [113.474513, 28.509687], [113.476098, 28.510125], [113.480568, 28.510758], [113.48395, 28.511692], [113.48797, 28.513291], [113.490596, 28.514005], [113.495349, 28.513169], [113.497904, 28.514167], [113.500032, 28.516569], [113.500552, 28.517916], [113.50209, 28.519483], [113.504384, 28.520879], [113.505732, 28.522834], [113.506867, 28.529026], [113.50682, 28.532921], [113.507364, 28.536954], [113.511124, 28.536345], [113.515405, 28.537019], [113.517746, 28.536321], [113.521625, 28.533724], [113.524794, 28.530341], [113.5282, 28.528279], [113.530446, 28.528499], [113.535153, 28.527784], [113.537778, 28.527614], [113.541184, 28.526867], [113.543549, 28.525877], [113.548492, 28.52496], [113.550502, 28.525561], [113.552015, 28.526502], [113.55412, 28.530633], [113.556816, 28.532734], [113.558023, 28.533164], [113.562138, 28.53288], [113.566962, 28.533051], [113.569659, 28.534235], [113.573277, 28.535217], [113.575926, 28.536378], [113.578433, 28.535339], [113.582004, 28.532036], [113.585528, 28.526186], [113.588295, 28.523467], [113.594704, 28.516293], [113.598134, 28.511992], [113.607263, 28.50308], [113.612111, 28.498803], [113.615327, 28.495751], [113.619419, 28.492959], [113.624835, 28.490669], [113.625828, 28.489638], [113.629021, 28.484541], [113.629659, 28.482771], [113.63193, 28.4823], [113.635809, 28.482608], [113.638363, 28.480571], [113.64061, 28.477607], [113.641934, 28.476463], [113.643755, 28.4757], [113.646096, 28.4738], [113.649739, 28.470025], [113.652908, 28.464138], [113.654232, 28.462344], [113.656313, 28.460833], [113.65908, 28.459339], [113.661091, 28.457001], [113.661422, 28.454459], [113.656668, 28.449936], [113.656455, 28.448661], [113.657992, 28.447313], [113.659766, 28.446728], [113.663692, 28.446403], [113.665773, 28.44577], [113.669983, 28.445055], [113.673152, 28.443975], [113.67696, 28.442034], [113.682423, 28.438696], [113.684623, 28.437592], [113.691245, 28.43267], [113.692664, 28.431419], [113.696093, 28.427788], [113.699664, 28.425563], [113.703401, 28.422558], [113.704678, 28.422184], [113.713807, 28.423573], [113.717757, 28.42402], [113.719625, 28.425108], [113.721659, 28.431736], [113.727217, 28.438883], [113.729724, 28.441303], [113.731971, 28.442359], [113.740367, 28.444446], [113.746397, 28.446931], [113.750347, 28.44832], [113.756236, 28.449497], [113.761675, 28.451381], [113.763733, 28.451511], [113.768416, 28.450464], [113.770355, 28.450423], [113.773903, 28.45104], [113.776764, 28.451934], [113.779744, 28.45329], [113.784971, 28.457553], [113.787431, 28.458024], [113.789677, 28.457975], [113.797837, 28.456781], [113.80129, 28.456773], [113.803513, 28.457147], [113.806398, 28.458649], [113.815149, 28.464852], [113.817537, 28.466874], [113.823237, 28.480595], [113.824893, 28.48411], [113.827849, 28.485571], [113.832981, 28.489046], [113.83317, 28.492309], [113.832272, 28.495134], [113.832461, 28.498868], [113.83511, 28.503089], [113.838468, 28.509939], [113.84062, 28.514833], [113.843293, 28.521966], [113.844428, 28.523897], [113.846178, 28.525431], [113.851783, 28.52957], [113.85578, 28.531842], [113.858452, 28.532231], [113.860581, 28.531055], [113.862118, 28.529391], [113.868693, 28.524019], [113.873447, 28.521049], [113.876498, 28.518907], [113.880234, 28.516967], [113.88565, 28.515165], [113.888559, 28.5151], [113.889529, 28.515628], [113.895371, 28.522218], [113.897594, 28.524871], [113.900053, 28.527224], [113.901662, 28.528296], [113.903199, 28.528612], [113.906959, 28.527582], [113.911122, 28.526088], [113.913771, 28.525529], [113.917862, 28.525447], [113.927772, 28.528896], [113.932525, 28.530803], [113.935434, 28.531395], [113.938414, 28.528328], [113.939833, 28.526543], [113.941252, 28.526364], [113.944847, 28.528904], [113.948016, 28.532093], [113.950996, 28.536418], [113.953219, 28.538106], [113.959487, 28.541441], [113.962443, 28.542341], [113.963578, 28.543785], [113.966014, 28.550122], [113.970626, 28.55877], [113.974315, 28.563978], [113.975995, 28.564732], [113.979045, 28.564213], [113.983515, 28.562883], [113.987418, 28.562842], [113.990279, 28.563183], [113.993354, 28.564797], [113.995766, 28.564894], [114.00201, 28.562177], [114.006007, 28.558932], [114.010926, 28.556734], [114.013551, 28.5546], [114.014568, 28.552036], [114.015065, 28.545684], [114.017619, 28.543607], [114.019582, 28.542893], [114.025447, 28.542804], [114.027292, 28.543688], [114.030319, 28.54643], [114.032259, 28.547655], [114.037272, 28.550187], [114.040063, 28.55103], [114.043067, 28.550041], [114.051723, 28.544378], [114.053284, 28.544175], [114.057304, 28.545311], [114.062271, 28.546122], [114.06596, 28.54772], [114.068444, 28.550957], [114.069934, 28.551898], [114.073883, 28.555208], [114.075893, 28.555403], [114.081569, 28.554787], [114.086773, 28.555882], [114.09032, 28.549732], [114.091881, 28.547907], [114.094624, 28.546219], [114.097321, 28.542812], [114.098976, 28.541278], [114.100655, 28.540321], [114.104629, 28.538925], [114.10943, 28.538568], [114.11468, 28.539136], [114.118511, 28.538998], [114.121302, 28.537586], [114.123194, 28.534738], [114.125417, 28.534414], [114.126387, 28.535517], [114.128042, 28.536094], [114.131141, 28.536524], [114.133671, 28.536548], [114.136911, 28.535363], [114.138117, 28.533708], [114.139063, 28.529886], [114.139678, 28.526389], [114.140624, 28.523427], [114.142682, 28.520237], [114.143841, 28.519207], [114.147294, 28.517689], [114.148926, 28.515466], [114.151622, 28.511254], [114.154649, 28.507553], [114.15997, 28.50679], [114.164606, 28.501952], [114.168886, 28.499347], [114.17189, 28.498048], [114.174657, 28.497382], [114.180049, 28.496904], [114.185205, 28.497399], [114.192418, 28.499452], [114.195588, 28.498559], [114.19729, 28.49748], [114.200696, 28.494412], [114.204456, 28.492715], [114.205899, 28.491238], [114.210842, 28.48778], [114.213065, 28.487171], [114.216897, 28.485701], [114.218197, 28.484573], [114.218789, 28.482625], [114.219427, 28.479085], [114.219711, 28.476106], [114.219309, 28.470552], [114.218552, 28.468652], [114.216897, 28.466411], [114.21491, 28.464739], [114.211197, 28.46253], [114.208051, 28.460395], [114.206443, 28.459867], [114.202304, 28.459266], [114.199655, 28.45346], [114.196959, 28.450642], [114.193767, 28.449075], [114.192158, 28.44763], [114.191401, 28.446306], [114.19003, 28.441319], [114.187546, 28.438948], [114.182982, 28.436861], [114.180853, 28.436788], [114.175485, 28.437039], [114.173238, 28.436162], [114.171843, 28.434611], [114.172363, 28.432784], [114.178678, 28.433279], [114.181279, 28.432556], [114.182769, 28.43176], [114.186388, 28.4312], [114.189107, 28.431801], [114.193388, 28.430867], [114.202233, 28.42445], [114.204527, 28.421778], [114.206703, 28.418529], [114.208028, 28.415499], [114.21018, 28.412022], [114.210795, 28.410365], [114.213491, 28.406489], [114.214626, 28.403069], [114.217346, 28.402102], [114.220775, 28.402306], [114.222525, 28.401631], [114.223944, 28.400559], [114.22586, 28.39817], [114.226451, 28.396789], [114.228154, 28.395432], [114.229218, 28.396643], [114.233333, 28.398788], [114.236148, 28.396927], [114.240547, 28.397065], [114.242699, 28.396456], [114.247287, 28.396033], [114.249368, 28.39622], [114.252467, 28.395733], [114.255021, 28.393921], [114.25599, 28.392101], [114.256085, 28.38322], [114.256345, 28.381855], [114.259112, 28.378263], [114.259278, 28.375232], [114.258072, 28.372932], [114.255565, 28.371193], [114.250622, 28.368121], [114.249865, 28.365992], [114.250598, 28.363879], [114.251592, 28.362456], [114.256203, 28.359693], [114.258687, 28.357539], [114.260129, 28.35571], [114.260933, 28.354004], [114.261265, 28.352232], [114.259727, 28.350102], [114.257859, 28.349972], [114.255659, 28.350638], [114.25372, 28.349761], [114.252206, 28.346721], [114.248493, 28.342396], [114.247855, 28.341128], [114.247122, 28.338088], [114.250409, 28.33308], [114.253034, 28.329438], [114.254595, 28.328129], [114.255517, 28.326592], [114.255683, 28.323609], [114.254098, 28.320909], [114.250622, 28.318202], [114.245537, 28.315925], [114.244, 28.315624], [114.242581, 28.314754], [114.241682, 28.31303], [114.239956, 28.311925], [114.238016, 28.311339], [114.235131, 28.310924], [114.232955, 28.307184], [114.230921, 28.306704], [114.229053, 28.305379], [114.228556, 28.302565], [114.227161, 28.301012], [114.224772, 28.300312], [114.221958, 28.298344], [114.219001, 28.295864], [114.215667, 28.294002], [114.21044, 28.294717], [114.208122, 28.294132], [114.204646, 28.291928], [114.20202, 28.291107], [114.199939, 28.291895], [114.198142, 28.290741], [114.196155, 28.284421], [114.196439, 28.281965], [114.198402, 28.280151], [114.198804, 28.278549], [114.197858, 28.276824], [114.199135, 28.272481], [114.198378, 28.269788], [114.196273, 28.268283], [114.193057, 28.267917], [114.188682, 28.26686], [114.186482, 28.267584], [114.184661, 28.267633], [114.183904, 28.265574], [114.183313, 28.261385], [114.183691, 28.256813], [114.182131, 28.252786], [114.182462, 28.251427], [114.182154, 28.250044], [114.180546, 28.2498], [114.177235, 28.25098], [114.173664, 28.252737], [114.170707, 28.253518], [114.16794, 28.253559], [114.165859, 28.253022], [114.155997, 28.248913], [114.153656, 28.249043], [114.152095, 28.249548], [114.14876, 28.249239], [114.145023, 28.24779], [114.144077, 28.246684], [114.143959, 28.245203], [114.144905, 28.242005], [114.144668, 28.239312], [114.14377, 28.238157], [114.137337, 28.232388], [114.135469, 28.231224], [114.129651, 28.228148], [114.128657, 28.223387], [114.126245, 28.220222], [114.12291, 28.217324], [114.121231, 28.213141], [114.120025, 28.212156], [114.117187, 28.210699], [114.111629, 28.205962], [114.109453, 28.204912], [114.106639, 28.201624], [114.106284, 28.19967], [114.106615, 28.198189], [114.10794, 28.195055], [114.107585, 28.193044], [114.10671, 28.190635], [114.106662, 28.189031], [114.107798, 28.185897], [114.107821, 28.184399], [114.107254, 28.182974], [114.105314, 28.181517], [114.102807, 28.180988], [114.100632, 28.180964], [114.095523, 28.181485], [114.093324, 28.180955], [114.092023, 28.180141], [114.083769, 28.179197], [114.081924, 28.177691], [114.080387, 28.175281], [114.07762, 28.174157], [114.07542, 28.173848], [114.072464, 28.172724], [114.06868, 28.171658], [114.060332, 28.17099], [114.053473, 28.171088], [114.052172, 28.171878], [114.049854, 28.175045], [114.048033, 28.176689], [114.045905, 28.176038], [114.043398, 28.174003], [114.041009, 28.1734], [114.036468, 28.173636], [114.03382, 28.174051], [114.031809, 28.173978], [114.027292, 28.172089], [114.025022, 28.172171], [114.0162, 28.173954], [114.012345, 28.175102], [114.011257, 28.17441], [114.010027, 28.171251], [114.007355, 28.166561], [114.005983, 28.165926], [114.000212, 28.164427], [113.995624, 28.164786], [113.994111, 28.163963], [113.992644, 28.161423], [113.992999, 28.158858], [113.99404, 28.157514], [113.994678, 28.154868], [113.995837, 28.15262], [113.997635, 28.149925], [113.999905, 28.147237], [114.005983, 28.144851], [114.006716, 28.14047], [114.008135, 28.138042], [114.00726, 28.13195], [114.007213, 28.125426], [114.007899, 28.12422], [114.0092, 28.123748], [114.013433, 28.123984], [114.014805, 28.123333], [114.016437, 28.121459], [114.017075, 28.120172], [114.01568, 28.117516], [114.016531, 28.110771], [114.016649, 28.107456], [114.017359, 28.102771], [114.018352, 28.10049], [114.021663, 28.099814], [114.022491, 28.09908], [114.023059, 28.095829], [114.024359, 28.093703], [114.027032, 28.092391], [114.026914, 28.091226], [114.027907, 28.088936], [114.028545, 28.084789], [114.027694, 28.083998], [114.026393, 28.084308], [114.023224, 28.086027], [114.022325, 28.084707], [114.019606, 28.085824], [114.019085, 28.085441], [114.021214, 28.08302], [114.02417, 28.080918], [114.025329, 28.080519], [114.028238, 28.08157], [114.029255, 28.080071], [114.030532, 28.079459], [114.033536, 28.079101], [114.036303, 28.078147], [114.038053, 28.075817], [114.037367, 28.075336], [114.038124, 28.074048], [114.037438, 28.072622], [114.041506, 28.068368], [114.042949, 28.067732], [114.044628, 28.062859], [114.046874, 28.058294], [114.047016, 28.057316], [114.045763, 28.05699], [114.045053, 28.055507], [114.045716, 28.052882], [114.04283, 28.052442], [114.040583, 28.051717], [114.037249, 28.051301], [114.03486, 28.050241], [114.034245, 28.049589], [114.032992, 28.046158], [114.029728, 28.042318], [114.027552, 28.041796], [114.027954, 28.040248], [114.027316, 28.037843], [114.027812, 28.03622], [114.026819, 28.031802], [114.025447, 28.031411], [114.024549, 28.032283], [114.022255, 28.032495], [114.019606, 28.033465], [114.017856, 28.034835], [114.014994, 28.036351], [114.010193, 28.038063], [114.004848, 28.03821], [114.002175, 28.039938], [114.000567, 28.040435], [113.997398, 28.040239], [113.989262, 28.038723], [113.981198, 28.040321], [113.976113, 28.040989], [113.968828, 28.041144], [113.963342, 28.039636], [113.961804, 28.038854], [113.960291, 28.037509], [113.957949, 28.034818], [113.957145, 28.033424], [113.956247, 28.030612], [113.95698, 28.02841], [113.959463, 28.025964], [113.961615, 28.02444], [113.964926, 28.021252], [113.966322, 28.019271], [113.966298, 28.017803], [113.965565, 28.016865], [113.961923, 28.015178], [113.957334, 28.014248], [113.951162, 28.013767], [113.944067, 28.014191], [113.937492, 28.018284], [113.935529, 28.01892], [113.934346, 28.018366], [113.930657, 28.015349], [113.929805, 28.010921], [113.927369, 28.006559], [113.925288, 28.004169], [113.921031, 28.002669], [113.91895, 28.001413], [113.916301, 27.996504], [113.915781, 27.993029], [113.914291, 27.991349], [113.900172, 27.98759], [113.898516, 27.987394], [113.894425, 27.987802], [113.888938, 27.989767], [113.887211, 27.990028], [113.885177, 27.991529], [113.881914, 27.991716], [113.880022, 27.9913], [113.878697, 27.991969], [113.877349, 27.993878], [113.874464, 27.998918], [113.87146, 28.002726], [113.869497, 28.004235], [113.867203, 28.004887], [113.864862, 28.005091], [113.862473, 28.003949], [113.859824, 28.001731], [113.8585, 27.998909], [113.858358, 27.996553], [113.856111, 27.994253], [113.853486, 27.991121], [113.852209, 27.988634], [113.852091, 27.9875], [113.852422, 27.983161], [113.852871, 27.982427], [113.852327, 27.981016], [113.852043, 27.976105], [113.850837, 27.974115], [113.849726, 27.973316], [113.845256, 27.971693], [113.838965, 27.97241], [113.833833, 27.971228], [113.832201, 27.971097], [113.828842, 27.971627], [113.826761, 27.973242], [113.825579, 27.97644], [113.825129, 27.980779], [113.823261, 27.98206], [113.821936, 27.982264], [113.818838, 27.981505], [113.813753, 27.978177], [113.810419, 27.976497], [113.807912, 27.975518], [113.802969, 27.97405], [113.800084, 27.972215], [113.797269, 27.969922], [113.796087, 27.968332], [113.793887, 27.964522], [113.793083, 27.962205], [113.793698, 27.95984], [113.795188, 27.957596], [113.794975, 27.956013], [113.792705, 27.955092], [113.788022, 27.954357], [113.784025, 27.954088], [113.780454, 27.954325], [113.776457, 27.954333], [113.772223, 27.953264], [113.771041, 27.952685], [113.76948, 27.951143], [113.766122, 27.946811], [113.762882, 27.942143], [113.759712, 27.939002], [113.75607, 27.936921], [113.753445, 27.934686], [113.752428, 27.933429], [113.750205, 27.929741], [113.74862, 27.926215], [113.74583, 27.921441], [113.745191, 27.918503], [113.745002, 27.915957], [113.743394, 27.913117], [113.739823, 27.910244], [113.738995, 27.90933], [113.736701, 27.905747], [113.735305, 27.902849], [113.734572, 27.900694], [113.73443, 27.897927], [113.731521, 27.890278], [113.730599, 27.888572], [113.730244, 27.886874], [113.730386, 27.884703], [113.722889, 27.885748], [113.721044, 27.88538], [113.719791, 27.884572], [113.718112, 27.882409], [113.714966, 27.880613], [113.711584, 27.877576], [113.709621, 27.876637], [113.707161, 27.875975], [113.704134, 27.87413], [113.701462, 27.871101], [113.699428, 27.870219], [113.696968, 27.869901], [113.692356, 27.870619], [113.686207, 27.873624], [113.680768, 27.874841], [113.678355, 27.875028], [113.672206, 27.876849], [113.669699, 27.878392], [113.6675, 27.88027], [113.662604, 27.883805], [113.660665, 27.884899], [113.658253, 27.884523], [113.655486, 27.882229], [113.655013, 27.880923], [113.654942, 27.877821], [113.654067, 27.877461], [113.651702, 27.877486], [113.64787, 27.878041], [113.644914, 27.879747], [113.644181, 27.881258], [113.643684, 27.884466], [113.641224, 27.887307], [113.637937, 27.889282], [113.636778, 27.890287], [113.635714, 27.893086], [113.63394, 27.895772], [113.63245, 27.896931], [113.628359, 27.898613], [113.625544, 27.899364], [113.620862, 27.90138], [113.614996, 27.906032], [113.610834, 27.907779], [113.608563, 27.909542], [113.606198, 27.911909], [113.602178, 27.913557], [113.600759, 27.913582], [113.597306, 27.912954], [113.596076, 27.912146], [113.594799, 27.910325], [113.594917, 27.909305], [113.59688, 27.907053], [113.597282, 27.902923], [113.594397, 27.895527], [113.592836, 27.891944], [113.591393, 27.89125], [113.589336, 27.892238], [113.588035, 27.893405], [113.58619, 27.894393], [113.584062, 27.896001], [113.577392, 27.89907], [113.575973, 27.901135], [113.573726, 27.905624], [113.571858, 27.910448], [113.571361, 27.912586], [113.573112, 27.915206], [113.573939, 27.917695], [113.573112, 27.920446], [113.572166, 27.921392], [113.570392, 27.924697], [113.569446, 27.92779], [113.569895, 27.930728], [113.571834, 27.934367], [113.572, 27.936628], [113.57323, 27.937941], [113.575311, 27.938757], [113.576777, 27.938774], [113.57822, 27.939753], [113.578102, 27.942405], [113.57725, 27.947471], [113.577463, 27.952554], [113.576896, 27.956438], [113.575689, 27.95975], [113.573348, 27.962197], [113.571054, 27.963804], [113.569257, 27.964628], [113.567719, 27.964775], [113.565638, 27.964359], [113.558638, 27.96201], [113.554215, 27.961218], [113.547096, 27.962034], [113.542343, 27.96192], [113.538227, 27.960737], [113.533284, 27.958534], [113.531251, 27.958396], [113.525906, 27.959913], [113.524581, 27.959048], [113.523777, 27.955769], [113.524463, 27.951885], [113.524439, 27.946917], [113.523162, 27.944477], [113.521554, 27.942307], [113.519615, 27.94127], [113.515949, 27.940781], [113.512496, 27.939549], [113.507316, 27.938194], [113.504218, 27.937648], [113.501877, 27.937672], [113.499204, 27.938374], [113.495397, 27.93901], [113.490194, 27.939451], [113.488491, 27.93892], [113.484991, 27.937011], [113.483926, 27.935934], [113.48324, 27.931968], [113.482294, 27.928688], [113.481561, 27.927154], [113.479433, 27.925211], [113.477683, 27.924395], [113.471392, 27.922347], [113.469074, 27.921017], [113.46555, 27.91945], [113.463611, 27.918242], [113.461553, 27.916292], [113.460702, 27.914986], [113.458171, 27.908073], [113.458053, 27.904792], [113.45933, 27.901486], [113.459543, 27.900188], [113.457982, 27.898645], [113.454718, 27.896964], [113.451005, 27.896066], [113.44618, 27.895666], [113.441805, 27.896058], [113.435254, 27.897086], [113.431659, 27.89805], [113.42875, 27.898343], [113.426078, 27.898196], [113.424186, 27.897658], [113.422175, 27.894058], [113.419929, 27.891642], [113.418912, 27.891323], [113.41553, 27.888964], [113.415009, 27.887135], [113.414867, 27.884768], [113.415648, 27.88009], [113.416192, 27.872767], [113.415742, 27.869656], [113.414796, 27.866259], [113.41508, 27.861017], [113.414678, 27.859482], [113.413235, 27.8578], [113.409049, 27.855946], [113.405596, 27.855081], [113.400015, 27.85339], [113.397248, 27.853374], [113.391288, 27.854297], [113.387126, 27.854526], [113.384406, 27.85437], [113.375017, 27.852852], [113.371516, 27.852623], [113.366905, 27.851586], [113.365249, 27.85099], [113.360779, 27.848368], [113.358816, 27.848107], [113.355907, 27.850483], [113.350113, 27.854215], [113.346944, 27.85602], [113.343065, 27.858551], [113.341788, 27.85869], [113.339139, 27.858029], [113.331334, 27.856926], [113.327219, 27.857923], [113.324973, 27.859229], [113.322442, 27.861107], [113.317996, 27.864071], [113.315749, 27.8651], [113.312154, 27.865827], [113.311019, 27.865753], [113.305768, 27.866839], [113.300755, 27.86884], [113.300211, 27.870913], [113.300589, 27.87431], [113.300069, 27.877233], [113.298981, 27.878114], [113.297302, 27.878539], [113.294038, 27.877069], [113.288504, 27.877192], [113.287889, 27.876057], [113.288764, 27.873477], [113.289686, 27.869427], [113.290207, 27.865827], [113.289828, 27.864912], [113.288386, 27.864553], [113.285122, 27.864716], [113.280936, 27.864079], [113.27805, 27.863075], [113.274999, 27.862675], [113.27358, 27.863891], [113.273746, 27.866945], [113.274526, 27.870007], [113.276016, 27.874155], [113.276939, 27.876147], [113.278405, 27.87831], [113.280155, 27.879641], [113.28103, 27.880898], [113.281598, 27.88396], [113.281172, 27.888409], [113.281669, 27.892817], [113.281622, 27.89445], [113.279398, 27.900792], [113.27779, 27.903698], [113.27675, 27.904522], [113.274148, 27.905265], [113.271759, 27.906522], [113.271665, 27.907877], [113.272918, 27.908856], [113.274881, 27.909566], [113.276915, 27.909542], [113.280203, 27.909942], [113.281409, 27.910415], [113.283703, 27.910007], [113.287983, 27.909624], [113.290207, 27.909893], [113.290561, 27.910913], [113.28848, 27.915565], [113.287558, 27.916847], [113.284223, 27.91865], [113.279351, 27.919915], [113.27403, 27.918805], [113.271972, 27.920119], [113.271428, 27.921694], [113.271168, 27.92513], [113.270671, 27.927439], [113.268472, 27.931683], [113.266698, 27.934196], [113.262465, 27.938806], [113.259083, 27.941801], [113.259414, 27.944118], [113.261874, 27.948557], [113.263198, 27.949487], [113.26535, 27.949348], [113.269229, 27.947104], [113.270104, 27.946892], [113.271192, 27.947757], [113.271523, 27.949682], [113.271026, 27.958143], [113.27183, 27.961765], [113.273368, 27.963772], [113.275945, 27.965901], [113.277979, 27.968699], [113.277672, 27.970616], [113.26956, 27.977019], [113.269087, 27.97865], [113.271073, 27.984662], [113.271783, 27.988854], [113.271428, 27.990656], [113.269489, 27.992255], [113.267573, 27.993119], [113.267526, 27.994367], [113.269418, 27.995582], [113.269986, 27.996683], [113.268165, 27.998608], [113.267006, 28.000451], [113.266982, 28.001348], [113.268708, 28.001764], [113.268827, 28.004047], [113.265279, 28.010195], [113.264026, 28.011745], [113.261921, 28.009576], [113.260644, 28.004577], [113.259863, 28.002661], [113.259698, 27.998306], [113.259343, 27.996683], [113.260313, 27.99515], [113.260076, 27.994139], [113.259272, 27.994334], [113.256836, 27.993804], [113.257569, 27.994481], [113.258302, 27.996675], [113.258373, 28.001022], [113.257829, 28.002237], [113.25816, 28.004479], [113.259296, 28.006624], [113.26036, 28.010685], [113.25984, 28.013237], [113.258917, 28.013718], [113.257191, 28.012405], [113.256245, 28.012984], [113.256694, 28.015047], [113.255417, 28.018781], [113.251373, 28.019776], [113.250261, 28.019678], [113.247802, 28.016507], [113.246099, 28.015218], [113.244656, 28.011003], [113.243852, 28.009926], [113.241392, 28.009674], [113.240257, 28.010269], [113.239453, 28.012177], [113.238105, 28.012943], [113.232121, 28.013335], [113.228195, 28.014427], [113.227557, 28.015243], [113.226564, 28.02042], [113.225665, 28.020437], [113.223442, 28.019157], [113.219492, 28.018537], [113.217884, 28.018969], [113.214573, 28.024073], [113.213934, 28.024546], [113.212492, 28.023192], [113.212279, 28.019238], [113.209181, 28.012299], [113.208447, 28.011394], [113.205799, 28.011149], [113.202062, 28.011737], [113.198775, 28.011908], [113.196315, 28.011435], [113.194115, 28.010554], [113.190828, 28.010668], [113.186736, 28.012348], [113.179689, 28.012046], [113.17853, 28.01274], [113.17801, 28.014599], [113.177229, 28.014933]]]],\r\n        },\r\n      },\r\n    ],\r\n};\r\n\r\nexport {\r\n  changsha,\r\n};\r\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, touch, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nfunction toucher(identifier) {\n  return function(target) {\n    return touch(target, event.touches, identifier);\n  };\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    return (!clean && that.__brush.emitter) || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      else this.emit(\"brush\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        pointer = event.touches ? toucher(event.changedTouches[0].identifier) : mouse,\n        point0 = pointer(that),\n        point = point0,\n        emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = pointer(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function touchmoved() {\n    emitter(this, arguments).moved();\n  }\n\n  function touchended() {\n    emitter(this, arguments).ended();\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","export var slice = Array.prototype.slice;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(x) {\n  return x;\n}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import adder from \"../adder.js\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder.js\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p);\n  };\n\n  zoom.scaleTo = function(selection, k, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p);\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments, true),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, arguments, event.changedTouches.length === n),\n        started, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    g.taps = 0;\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        var p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","\n\n\n\n\n\n\nimport {Vue, Component} from 'vue-property-decorator';\nimport {changsha} from '@/data/changsha';\nimport * as d3 from 'd3';\n\n@Component({\n  name: 'MapChart',\n})\nexport default class extends Vue {\n  private width: number = 0;\n  private height: number = 800;\n\n  private mounted() {\n    this.width = (this.$refs.mapChart as HTMLElement).offsetWidth;\n    const svg = d3.select('#svg')\n      .append('svg')\n      .attr('width', this.width + 'px')\n      .attr('height', this.height + 'px');\n\n    /*\n     * 创建一个地理投影\n     * .center 设置投影中心位置\n     * .scale 设置缩放系数\n     *\n     */\n    const projection = d3.geoMercator()\n      .center([112, 28])\n      .scale(30000)\n      .translate([this.width / 5, this.height / 1.5]);\n\n    //  创建路径生成器path\n    const path: any = d3.geoPath().projection(projection);\n\n    //  获取GeoJSON数据：这里我放在了js中方便加载\n    const features = changsha.features;\n\n    // 设置颜色值\n    const ss2 = d3.schemeSet2;\n    const sp2 = d3.schemePastel2;\n\n    /*\n     * 渲染地图\n     *\n     * mouseover 鼠标移入变色\n     *\n     */\n    svg.append('g')\n      .attr('class', 'map')\n      .selectAll('.china')\n      .data(features)\n      .join('path')\n      .attr('class', 'china')\n      .attr('fill', (d, i) => {\n        return ss2[i % 3];\n      })\n      .attr('d', path)\n      .on('mouseover', function(d, i) {\n        d3.select(this)\n          .attr('fill', sp2[i % 3]);\n      })\n      .on('mouseout', function(d, i)  {\n        d3.select(this)\n          .attr('fill', ss2[i % 3]);\n      });\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map-chart.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map-chart.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./map-chart.vue?vue&type=template&id=01b9fdfe&\"\nimport script from \"./map-chart.vue?vue&type=script&lang=ts&\"\nexport * from \"./map-chart.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar SLOPPY_METHOD = sloppyArrayMethod('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || SLOPPY_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","export {default as create} from \"./create\";\nexport {default as creator} from \"./creator\";\nexport {default as local} from \"./local\";\nexport {default as matcher} from \"./matcher\";\nexport {default as mouse} from \"./mouse\";\nexport {default as namespace} from \"./namespace\";\nexport {default as namespaces} from \"./namespaces\";\nexport {default as clientPoint} from \"./point\";\nexport {default as select} from \"./select\";\nexport {default as selectAll} from \"./selectAll\";\nexport {default as selection} from \"./selection/index\";\nexport {default as selector} from \"./selector\";\nexport {default as selectorAll} from \"./selectorAll\";\nexport {styleValue as style} from \"./selection/style\";\nexport {default as touch} from \"./touch\";\nexport {default as touches} from \"./touches\";\nexport {default as window} from \"./window\";\nexport {event, customEvent} from \"./selection/on\";\n"],"sourceRoot":""}